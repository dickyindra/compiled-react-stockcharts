{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachFibRetracement.js"],"names":["EachFibRetracement","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineNSResizeTop","handleLineNSResizeBottom","handleLineMove","handleLineDragStart","handleHover","isHover","saveNodeType","nodes","state","hover","moreProps","hovering","setState","x1","y1","x2","y2","dragStart","index","onDrag","x1Value","y1Value","x2Value","y2Value","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","interactive","yDisplayFormat","type","appearance","stroke","strokeWidth","strokeOpacity","fontFamily","fontSize","fontFill","edgeStroke","edgeFill","nsEdgeFill","edgeStrokeWidth","r","hoverText","selected","onDragComplete","lines","helper","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","lineType","dir","map","line","j","y","percent","toFixed","xyProvider","start","end","x","Math","min","firstOrLast","length","interactiveCursorClass","interactiveEdgeCursorClass","dragHandler","edge1DragHandler","edge2DragHandler","hoverHandler","onHover","onUnHover","retracements","each","propTypes","any","isRequired","number","func","string","bool","shape","object","defaultProps","d"],"mappings":"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","file":"EachFibRetracement.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { head, last, noop } from \"../../utils\";\r\nimport { getXValue } from \"../../utils/ChartDataUtil\";\r\nimport { saveNodeType, isHover } from \"../utils\";\r\n\r\nimport { getNewXY } from \"./EachTrendLine\";\r\nimport StraightLine, { generateLine } from \"../components/StraightLine\";\r\nimport ClickableCircle from \"../components/ClickableCircle\";\r\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\r\nimport Text from \"../components/Text\";\r\n\r\nclass EachFibRetracement extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\r\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\r\n\r\n\t\tthis.handleLineNSResizeTop = this.handleLineNSResizeTop.bind(this);\r\n\t\tthis.handleLineNSResizeBottom = this.handleLineNSResizeBottom.bind(this);\r\n\t\tthis.handleLineMove = this.handleLineMove.bind(this);\r\n\r\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\r\n\r\n\t\tthis.handleHover = this.handleHover.bind(this);\r\n\r\n\t\tthis.isHover = isHover.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\t\tthis.nodes = {};\r\n\r\n\t\tthis.state = {\r\n\t\t\thover: false,\r\n\t\t};\r\n\t}\r\n\thandleHover(moreProps) {\r\n\t\tif (this.state.hover !== moreProps.hovering) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thover: moreProps.hovering\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleLineDragStart() {\r\n\t\tconst {\r\n\t\t\tx1, y1, x2, y2,\r\n\t\t} = this.props;\r\n\r\n\t\tthis.dragStart = {\r\n\t\t\tx1, y1, x2, y2,\r\n\t\t};\r\n\t}\r\n\thandleLineMove(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\r\n\t\tconst {\r\n\t\t\tx1: x1Value, y1: y1Value, x2: x2Value, y2: y2Value,\r\n\t\t} = this.dragStart;\r\n\r\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\r\n\t\tconst { startPos, mouseXY } = moreProps;\r\n\r\n\t\tconst x1 = xScale(x1Value);\r\n\t\tconst y1 = yScale(y1Value);\r\n\t\tconst x2 = xScale(x2Value);\r\n\t\tconst y2 = yScale(y2Value);\r\n\r\n\t\tconst dx = startPos[0] - mouseXY[0];\r\n\t\tconst dy = startPos[1] - mouseXY[1];\r\n\r\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\r\n\t\tconst newY1Value = yScale.invert(y1 - dy);\r\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\r\n\t\tconst newY2Value = yScale.invert(y2 - dy);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1: newX1Value,\r\n\t\t\ty1: newY1Value,\r\n\t\t\tx2: newX2Value,\r\n\t\t\ty2: newY2Value,\r\n\t\t});\r\n\t}\r\n\thandleLineNSResizeTop(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx1, x2, y2,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [, y1] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1,\r\n\t\t\ty1,\r\n\t\t\tx2,\r\n\t\t\ty2,\r\n\t\t});\r\n\t}\r\n\thandleLineNSResizeBottom(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx1, y1, x2,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [, y2] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1,\r\n\t\t\ty1,\r\n\t\t\tx2,\r\n\t\t\ty2,\r\n\t\t});\r\n\t}\r\n\thandleEdge1Drag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\ty1, x2, y2,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x1] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1,\r\n\t\t\ty1,\r\n\t\t\tx2,\r\n\t\t\ty2,\r\n\t\t});\r\n\t}\r\n\thandleEdge2Drag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx1, y1, y2,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x2] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1,\r\n\t\t\ty1,\r\n\t\t\tx2,\r\n\t\t\ty2,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { x1, x2, y1, y2 } = this.props;\r\n\t\tconst { interactive, yDisplayFormat, type, appearance } = this.props;\r\n\t\tconst { stroke, strokeWidth, strokeOpacity } = appearance;\r\n\t\tconst { fontFamily, fontSize, fontFill } = appearance;\r\n\t\tconst { edgeStroke, edgeFill, nsEdgeFill, edgeStrokeWidth, r } = appearance;\r\n\t\tconst { hoverText, selected } = this.props;\r\n\t\tconst { hover } = this.state;\r\n\t\tconst { onDragComplete } = this.props;\r\n\t\tconst lines = helper({ x1, x2, y1, y2 });\r\n\r\n\t\tconst {\r\n\t\t\tenable: hoverTextEnabled,\r\n\t\t\tselectedText: hoverTextSelected,\r\n\t\t\ttext: hoverTextUnselected,\r\n\t\t\t...restHoverTextProps\r\n\t\t} = hoverText;\r\n\r\n\t\tconst lineType = type === \"EXTEND\" ? \"XLINE\" : type === \"BOUND\" ? \"LINE\" : type;\r\n\t\tconst dir = head(lines).y1 > last(lines).y1 ? 3 : -1.3;\r\n\r\n\t\treturn (\r\n\t\t\t<g>\r\n\t\t\t\t{lines.map((line, j) => {\r\n\t\t\t\t\tconst text = `${yDisplayFormat(line.y)} (${line.percent.toFixed(2)}%)`;\r\n\r\n\t\t\t\t\tconst xyProvider = ({ xScale, chartConfig }) => {\r\n\t\t\t\t\t\tconst { yScale } = chartConfig;\r\n\t\t\t\t\t\tconst { x1, y1, x2 } = generateLine({\r\n\t\t\t\t\t\t\ttype: lineType,\r\n\t\t\t\t\t\t\tstart: [line.x1, line.y],\r\n\t\t\t\t\t\t\tend: [line.x2, line.y],\r\n\t\t\t\t\t\t\txScale,\r\n\t\t\t\t\t\t\tyScale,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconst x = xScale(Math.min(x1, x2)) + 10;\r\n\t\t\t\t\t\tconst y = yScale(y1) + dir * 4;\r\n\t\t\t\t\t\treturn [x, y];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst firstOrLast = (j === 0) || (j === lines.length - 1);\r\n\r\n\t\t\t\t\tconst interactiveCursorClass = firstOrLast\r\n\t\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\r\n\t\t\t\t\t\t: \"react-stockcharts-move-cursor\";\r\n\r\n\t\t\t\t\tconst interactiveEdgeCursorClass = firstOrLast\r\n\t\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\r\n\t\t\t\t\t\t: \"react-stockcharts-ew-resize-cursor\";\r\n\r\n\t\t\t\t\tconst dragHandler = j === 0\r\n\t\t\t\t\t\t? this.handleLineNSResizeTop\r\n\t\t\t\t\t\t: j === lines.length - 1\r\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\r\n\t\t\t\t\t\t\t: this.handleLineMove;\r\n\r\n\t\t\t\t\tconst edge1DragHandler = j === 0\r\n\t\t\t\t\t\t? this.handleLineNSResizeTop\r\n\t\t\t\t\t\t: j === lines.length - 1\r\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\r\n\t\t\t\t\t\t\t: this.handleEdge1Drag;\r\n\t\t\t\t\tconst edge2DragHandler = j === 0\r\n\t\t\t\t\t\t? this.handleLineNSResizeTop\r\n\t\t\t\t\t\t: j === lines.length - 1\r\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\r\n\t\t\t\t\t\t\t: this.handleEdge2Drag;\r\n\r\n\t\t\t\t\tconst hoverHandler = interactive\r\n\t\t\t\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\r\n\t\t\t\t\t\t: {};\r\n\t\t\t\t\treturn <g key={j}>\r\n\t\t\t\t\t\t<StraightLine\r\n\t\t\t\t\t\t\tref={this.saveNodeType(`line_${j}`)}\r\n\t\t\t\t\t\t\tselected={selected || hover}\r\n\r\n\t\t\t\t\t\t\t{...hoverHandler}\r\n\r\n\t\t\t\t\t\t\ttype={lineType}\r\n\t\t\t\t\t\t\tx1Value={line.x1}\r\n\t\t\t\t\t\t\ty1Value={line.y}\r\n\t\t\t\t\t\t\tx2Value={line.x2}\r\n\t\t\t\t\t\t\ty2Value={line.y}\r\n\t\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\r\n\t\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\r\n\r\n\t\t\t\t\t\t\tonDragStart={this.handleLineDragStart}\r\n\t\t\t\t\t\t\tonDrag={dragHandler}\r\n\t\t\t\t\t\t\tonDragComplete={onDragComplete}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tselected={selected}\r\n\t\t\t\t\t\t\t/* eslint-disable */\r\n\t\t\t\t\t\t\txyProvider={xyProvider} \r\n\t\t\t\t\t\t\t/* eslint-enable */\r\n\t\t\t\t\t\t\tfontFamily={fontFamily}\r\n\t\t\t\t\t\t\tfontSize={fontSize}\r\n\t\t\t\t\t\t\tfill={fontFill}>{text}</Text>\r\n\t\t\t\t\t\t<ClickableCircle\r\n\t\t\t\t\t\t\tref={this.saveNodeType(\"edge1\")}\r\n\t\t\t\t\t\t\tshow={selected || hover}\r\n\t\t\t\t\t\t\tcx={line.x1}\r\n\t\t\t\t\t\t\tcy={line.y}\r\n\t\t\t\t\t\t\tr={r}\r\n\t\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\r\n\t\t\t\t\t\t\tstroke={edgeStroke}\r\n\t\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\r\n\t\t\t\t\t\t\tonDrag={edge1DragHandler}\r\n\t\t\t\t\t\t\tonDragComplete={onDragComplete} />\r\n\t\t\t\t\t\t<ClickableCircle\r\n\t\t\t\t\t\t\tref={this.saveNodeType(\"edge2\")}\r\n\t\t\t\t\t\t\tshow={selected || hover}\r\n\t\t\t\t\t\t\tcx={line.x2}\r\n\t\t\t\t\t\t\tcy={line.y}\r\n\t\t\t\t\t\t\tr={r}\r\n\t\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\r\n\t\t\t\t\t\t\tstroke={edgeStroke}\r\n\t\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\r\n\t\t\t\t\t\t\tonDrag={edge2DragHandler}\r\n\t\t\t\t\t\t\tonDragComplete={onDragComplete} />\r\n\t\t\t\t\t</g>;\r\n\t\t\t\t})}\r\n\t\t\t\t<HoverTextNearMouse\r\n\t\t\t\t\tshow={hoverTextEnabled && hover}\r\n\t\t\t\t\t{...restHoverTextProps}\r\n\t\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\r\n\t\t\t\t/>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nfunction helper({ x1, y1, x2, y2 }) {\r\n\tconst dy = y2 - y1;\r\n\tconst retracements = [100, 61.8, 50, 38.2, 23.6, 0]\r\n\t\t.map(each => ({\r\n\t\t\tpercent: each,\r\n\t\t\tx1,\r\n\t\t\tx2,\r\n\t\t\ty: (y2 - (each / 100) * dy),\r\n\t\t}));\r\n\r\n\treturn retracements;\r\n}\r\n\r\nEachFibRetracement.propTypes = {\r\n\tx1: PropTypes.any.isRequired,\r\n\tx2: PropTypes.any.isRequired,\r\n\ty1: PropTypes.number.isRequired,\r\n\ty2: PropTypes.number.isRequired,\r\n\r\n\tyDisplayFormat: PropTypes.func.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tselected: PropTypes.bool.isRequired,\r\n\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tfontFamily: PropTypes.string.isRequired,\r\n\t\tfontSize: PropTypes.number.isRequired,\r\n\t\tfontFill: PropTypes.string.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tnsEdgeFill: PropTypes.string.isRequired,\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tr: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\r\n\tinteractive: PropTypes.bool.isRequired,\r\n\thoverText: PropTypes.object.isRequired,\r\n\r\n\tindex: PropTypes.number,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n};\r\n\r\nEachFibRetracement.defaultProps = {\r\n\tyDisplayFormat: d => d.toFixed(2),\r\n\tinteractive: true,\r\n\r\n\tappearance: {\r\n\t\tstroke: \"#000000\",\r\n\t\tstrokeWidth: 1,\r\n\t\tstrokeOpacity: 1,\r\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\r\n\t\tfontSize: 10,\r\n\t\tfontFill: \"#000000\",\r\n\t\tedgeStroke: \"#000000\",\r\n\t\tedgeFill: \"#FFFFFF\",\r\n\t\tnsEdgeFill: \"#000000\",\r\n\t\tedgeStrokeWidth: 1,\r\n\t\tr: 5,\r\n\t},\r\n\tselected: false,\r\n\r\n\tonDrag: noop,\r\n\tonDragComplete: noop,\r\n\r\n\thoverText: {\r\n\t\tenable: false,\r\n\t}\r\n};\r\n\r\nexport default EachFibRetracement;\r\n"]}