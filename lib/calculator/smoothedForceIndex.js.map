{"version":3,"sources":["../../../src/lib/calculator/smoothedForceIndex.js"],"names":["underlyingAlgorithm","merge","combine","force","smoothed","options","calculator","data","smoothingType","smoothingWindow","sourcePath","volumePath","algo","ma","forceMA","windowSize","undefined","undefinedLength","x","arguments","length"],"mappings":";;;;;;;;kBAQe,YAAW;;AAEzB,KAAMA,sBAAsB,2BAA5B;AACA,KAAMC,QAAQ,qBACZC,OADY,CACJ,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAC7B,SAAO,EAAED,YAAF,EAASC,kBAAT,EAAP;AACA,EAHY,CAAd;;AAKA,KAAIC,0DAAJ;AACA,UAASC,UAAT,CAAoBC,IAApB,EAA0B;AAAA,iBACkBF,OADlB;AAAA,MACjBG,aADiB,YACjBA,aADiB;AAAA,MACFC,eADE,YACFA,eADE;AAAA,kBAEUJ,OAFV;AAAA,MAEjBK,UAFiB,aAEjBA,UAFiB;AAAA,MAELC,UAFK,aAELA,UAFK;;;AAIzB,MAAMC,OAAOZ,oBACXK,OADW,CACH,EAAEK,sBAAF,EAAcC,sBAAd,EADG,CAAb;;AAGA,MAAMR,QAAQS,KAAKL,IAAL,CAAd;;AAEA,MAAMM,KAAKL,kBAAkB,KAAlB,GAA0B,oBAA1B,GAAkC,oBAA7C;AACA,MAAMM,UAAUD,GACdR,OADc,CACN;AACRU,eAAYN,eADJ;AAERC,eAAYM;AAFJ,GADM,CAAhB;;AAMA,MAAMZ,WAAWU,QAAQX,KAAR,CAAjB;AACA,SAAOF,MAAME,KAAN,EAAaC,QAAb,CAAP;AACA;;AAEDE,YAAWW,eAAX,GAA6B,YAAW;AAAA,kBACXZ,OADW;AAAA,MAC/BI,eAD+B,aAC/BA,eAD+B;;AAEvC,SAAOT,oBAAoBiB,eAApB,KAAwCR,eAAxC,GAA0D,CAAjE;AACA,EAHD;AAIAH,YAAWD,OAAX,GAAqB,UAASa,CAAT,EAAY;AAChC,MAAI,CAACC,UAAUC,MAAf,EAAuB;AACtB,UAAOf,OAAP;AACA;AACDA,2EAAkCa,CAAlC;AACA,SAAOZ,UAAP;AACA,EAND;;AAQA,QAAOA,UAAP;AACA,C;;AAhDD;;;;AACA;;;;AACA;;;;AACA;;AACA","file":"smoothedForceIndex.js","sourcesContent":["\r\n\r\nimport forceIndex from \"./forceIndex\";\r\nimport ema from \"./ema\";\r\nimport sma from \"./sma\";\r\nimport { zipper } from \"../utils\";\r\nimport { SmoothedForceIndex as defaultOptions } from \"./defaultOptionsForComputation\";\r\n\r\nexport default function() {\r\n\r\n\tconst underlyingAlgorithm = forceIndex();\r\n\tconst merge = zipper()\r\n\t\t.combine((force, smoothed) => {\r\n\t\t\treturn { force, smoothed };\r\n\t\t});\r\n\r\n\tlet options = defaultOptions;\r\n\tfunction calculator(data) {\r\n\t\tconst { smoothingType, smoothingWindow } = options;\r\n\t\tconst { sourcePath, volumePath } = options;\r\n\r\n\t\tconst algo = underlyingAlgorithm\r\n\t\t\t.options({ sourcePath, volumePath });\r\n\r\n\t\tconst force = algo(data);\r\n\r\n\t\tconst ma = smoothingType === \"ema\" ? ema() : sma();\r\n\t\tconst forceMA = ma\r\n\t\t\t.options({\r\n\t\t\t\twindowSize: smoothingWindow,\r\n\t\t\t\tsourcePath: undefined\r\n\t\t\t});\r\n\r\n\t\tconst smoothed = forceMA(force);\r\n\t\treturn merge(force, smoothed);\r\n\t}\r\n\r\n\tcalculator.undefinedLength = function() {\r\n\t\tconst { smoothingWindow } = options;\r\n\t\treturn underlyingAlgorithm.undefinedLength() + smoothingWindow - 1;\r\n\t};\r\n\tcalculator.options = function(x) {\r\n\t\tif (!arguments.length) {\r\n\t\t\treturn options;\r\n\t\t}\r\n\t\toptions = { ...defaultOptions, ...x };\r\n\t\treturn calculator;\r\n\t};\r\n\r\n\treturn calculator;\r\n}\r\n"]}