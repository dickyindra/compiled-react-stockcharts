{"version":3,"sources":["../../../src/lib/series/OverlayBarSeries.js"],"names":["OverlayBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","bars","getBars","clip","propTypes","baseAt","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","widthRatio","opacity","fill","string","className","xAccessor","arrayOf","xScale","yScale","plotData","array","defaultProps","range","width","chartConfig","getClassName","getFill","getBase","widthFunctor","offset","Math","floor","map","innerBars","eachYAccessor","i","yValue","d","undefined","xValue","x","round","y","filter","b","h","length","height"],"mappings":"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","file":"OverlayBarSeries.js","sourcesContent":["\r\n\r\nimport { merge } from \"d3-array\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\n\r\nimport { drawOnCanvas2, getBarsSVG2 } from \"./StackedBarSeries\";\r\nimport { isDefined, isNotDefined, first, functor, plotDataLengthBarWidth } from \"../utils\";\r\n\r\nclass OverlayBarSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { yAccessor } = this.props;\r\n\t\tconst bars = getBars(this.props, moreProps, yAccessor);\r\n\r\n\t\tdrawOnCanvas2(this.props, ctx, bars);\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { yAccessor } = this.props;\r\n\r\n\t\tconst bars = getBars(this.props, moreProps, yAccessor);\r\n\t\treturn <g className=\"react-stockcharts-bar-series\">\r\n\t\t\t{getBarsSVG2(this.props, bars)}\r\n\t\t</g>;\r\n\t}\r\n\trender() {\r\n\t\tconst { clip } = this.props;\r\n\r\n\t\treturn <GenericChartComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tclip={clip}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nOverlayBarSeries.propTypes = {\r\n\tbaseAt: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.func,\r\n\t]).isRequired,\r\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\r\n\tstroke: PropTypes.bool.isRequired,\r\n\twidthRatio: PropTypes.number.isRequired,\r\n\topacity: PropTypes.number.isRequired,\r\n\tfill: PropTypes.oneOfType([\r\n\t\tPropTypes.func, PropTypes.string\r\n\t]).isRequired,\r\n\tclassName: PropTypes.oneOfType([\r\n\t\tPropTypes.func, PropTypes.string\r\n\t]).isRequired,\r\n\txAccessor: PropTypes.func,\r\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\r\n\txScale: PropTypes.func,\r\n\tyScale: PropTypes.func,\r\n\tplotData: PropTypes.array,\r\n\tclip: PropTypes.bool.isRequired,\r\n};\r\n\r\nOverlayBarSeries.defaultProps = {\r\n\tbaseAt: (xScale, yScale/* , d*/) => first(yScale.range()),\r\n\tdirection: \"up\",\r\n\tclassName: \"bar\",\r\n\tstroke: false,\r\n\tfill: \"#4682B4\",\r\n\topacity: 1,\r\n\twidthRatio: 0.5,\r\n\twidth: plotDataLengthBarWidth,\r\n\tclip: true,\r\n};\r\n\r\nfunction getBars(props, moreProps, yAccessor) {\r\n\tconst { xScale, xAccessor, chartConfig: { yScale }, plotData } = moreProps;\r\n\tconst { baseAt, className, fill, stroke } = props;\r\n\r\n\tconst getClassName = functor(className);\r\n\tconst getFill = functor(fill);\r\n\tconst getBase = functor(baseAt);\r\n\tconst widthFunctor = functor(props.width);\r\n\r\n\tconst width = widthFunctor(props, moreProps);\r\n\tconst offset = Math.floor(0.5 * width);\r\n\r\n\t// console.log(xScale.domain(), yScale.domain());\r\n\r\n\tconst bars = plotData\r\n\t\t.map(d => {\r\n\t\t\t// eslint-disable-next-line prefer-const\r\n\t\t\tlet innerBars = yAccessor.map((eachYAccessor, i) => {\r\n\t\t\t\tconst yValue = eachYAccessor(d);\r\n\t\t\t\tif (isNotDefined(yValue)) return undefined;\r\n\r\n\t\t\t\tconst xValue = xAccessor(d);\r\n\t\t\t\tconst x = Math.round(xScale(xValue)) - offset;\r\n\t\t\t\tconst y = yScale(yValue);\r\n\t\t\t\t// console.log(yValue, y, xValue, x)\r\n\t\t\t\treturn {\r\n\t\t\t\t\twidth: offset * 2,\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: y,\r\n\t\t\t\t\tclassName: getClassName(d, i),\r\n\t\t\t\t\tstroke: stroke ? getFill(d, i) : \"none\",\r\n\t\t\t\t\tfill: getFill(d, i),\r\n\t\t\t\t\ti,\r\n\t\t\t\t};\r\n\t\t\t}).filter(yValue => isDefined(yValue));\r\n\r\n\t\t\tlet b = getBase(xScale, yScale, d);\r\n\t\t\tlet h;\r\n\t\t\tfor (let i = innerBars.length - 1; i >= 0; i--) {\r\n\t\t\t\th = b - innerBars[i].y;\r\n\t\t\t\tif (h < 0) {\r\n\t\t\t\t\tinnerBars[i].y = b;\r\n\t\t\t\t\th = -1 * h;\r\n\t\t\t\t}\r\n\t\t\t\tinnerBars[i].height = h;\r\n\t\t\t\tb = innerBars[i].y;\r\n\t\t\t}\r\n\t\t\treturn innerBars;\r\n\t\t});\r\n\r\n\treturn merge(bars);\r\n}\r\n\r\nexport default OverlayBarSeries;\r\n"]}