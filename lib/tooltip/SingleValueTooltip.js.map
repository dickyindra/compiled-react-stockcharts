{"version":3,"sources":["../../../src/lib/tooltip/SingleValueTooltip.js"],"names":["SingleValueTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","labelFill","valueFill","className","xDisplayFormat","yDisplayFormat","xLabel","yLabel","xAccessor","yAccessor","displayValuesFor","chartConfig","width","height","currentItem","xDisplayValue","yDisplayValue","originProp","origin","x","y","propTypes","func","isRequired","string","oneOfType","array","number","defaultProps"],"mappings":"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","file":"SingleValueTooltip.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { format } from \"d3-format\";\r\nimport displayValuesFor from \"./displayValuesFor\";\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\n\r\nimport ToolTipText from \"./ToolTipText\";\r\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\r\nimport { isDefined, identity, noop, functor } from \"../utils\";\r\n\r\nclass SingleValueTooltip extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\r\n\t\tconst { onClick, fontFamily, fontSize, labelFill, valueFill, className } = this.props;\r\n\t\tconst { xDisplayFormat, yDisplayFormat, xLabel, yLabel, xAccessor, yAccessor } = this.props;\r\n\t\tconst { displayValuesFor } = this.props;\r\n\r\n\t\tconst { chartConfig: { width, height } } = moreProps;\r\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\r\n\r\n\t\tconst xDisplayValue = isDefined(currentItem) && isDefined(xAccessor(currentItem)) ? xDisplayFormat(xAccessor(currentItem)) : \"n/a\";\r\n\t\tconst yDisplayValue = isDefined(currentItem) && isDefined(yAccessor(currentItem)) ? yDisplayFormat(yAccessor(currentItem)) : \"n/a\";\r\n\r\n\t\tconst { origin: originProp } = this.props;\r\n\t\tconst origin = functor(originProp);\r\n\t\tconst [x, y] = origin(width, height);\r\n\r\n\t\treturn (\r\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\r\n\t\t\t\t<ToolTipText x={0} y={0}\r\n\t\t\t\t\tfontFamily={fontFamily} fontSize={fontSize}>\r\n\t\t\t\t\t{ xLabel ? <ToolTipTSpanLabel x={0} dy=\"5\" fill={labelFill}>{`${xLabel}: `}</ToolTipTSpanLabel> : null}\r\n\t\t\t\t\t{ xLabel ? <tspan fill={valueFill}>{`${xDisplayValue} `}</tspan> : null}\r\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{`${yLabel}: `}</ToolTipTSpanLabel>\r\n\t\t\t\t\t<tspan fill={valueFill} >{yDisplayValue}</tspan>\r\n\t\t\t\t</ToolTipText>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tclip={false}\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tdrawOn={[\"mousemove\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nSingleValueTooltip.propTypes = {\r\n\txDisplayFormat: PropTypes.func,\r\n\tyDisplayFormat: PropTypes.func.isRequired,\r\n\txLabel: PropTypes.string,\r\n\tyLabel: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.func\r\n\t]).isRequired,\r\n\tlabelFill: PropTypes.string.isRequired,\r\n\tvalueFill: PropTypes.string,\r\n\torigin: PropTypes.oneOfType([\r\n\t\tPropTypes.array,\r\n\t\tPropTypes.func\r\n\t]).isRequired,\r\n\tclassName: PropTypes.string,\r\n\tfontFamily: PropTypes.string,\r\n\tfontSize: PropTypes.number,\r\n\tonClick: PropTypes.func,\r\n\tdisplayValuesFor: PropTypes.func,\r\n\txAccessor: PropTypes.func,\r\n\tyAccessor: PropTypes.func,\r\n};\r\n\r\nSingleValueTooltip.defaultProps = {\r\n\torigin: [0, 0],\r\n\tlabelFill: \"#4682B4\",\r\n\tvalueFill: \"#000000\",\r\n\tyDisplayFormat: format(\".2f\"),\r\n\tdisplayValuesFor: displayValuesFor,\r\n\txAccessor: noop,\r\n\tyAccessor: identity,\r\n\tclassName: \"react-stockcharts-tooltip\",\r\n};\r\n\r\nexport default SingleValueTooltip;\r\n"]}