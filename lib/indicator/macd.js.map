{"version":3,"sources":["../../../src/lib/indicator/macd.js"],"names":["base","type","ALGORITHM_TYPE","fill","stroke","accessor","d","macd","underlyingAlgorithm","mergedAlgorithm","algorithm","merge","datum","indicator","data","options","Error"],"mappings":";;;;;;kBAWe,YAAW;;AAEzB,KAAMA,OAAO,+BACXC,IADW,CACNC,cADM,EAEXC,IAFW,CAEN,kCAAkBA,IAFZ,EAGXC,MAHW,CAGJ,kCAAkBA,MAHd,EAIXC,QAJW,CAIF;AAAA,SAAKC,EAAEC,IAAP;AAAA,EAJE,CAAb;;AAMA,KAAMC,sBAAsB,uBAA5B;;AAEA,KAAMC,kBAAkB,oBACtBC,SADsB,CACZF,mBADY,EAEtBG,KAFsB,CAEhB,UAACC,KAAD,EAAQC,SAAR,EAAsB;AAAED,QAAML,IAAN,GAAaM,SAAb;AAAyB,EAFjC,CAAxB;;AAIA,KAAMA,YAAY,SAAZA,SAAY,CAASC,IAAT,EAA0C;AAAA,MAA3BC,OAA2B,uEAAjB,EAAEJ,OAAO,IAAT,EAAiB;;AAC3D,MAAII,QAAQJ,KAAZ,EAAmB;AAClB,OAAI,CAACX,KAAKK,QAAL,EAAL,EAAsB,MAAM,IAAIW,KAAJ,yBAAgCd,cAAhC,yBAAN;AACtB,UAAOO,gBAAgBK,IAAhB,CAAP;AACA;AACD,SAAON,oBAAoBM,IAApB,CAAP;AACA,EAND;;AAQA,oBAAOD,SAAP,EAAkBb,IAAlB,EAAwB,IAAxB,EAA8B,UAA9B,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE;AACA,oBAAOa,SAAP,EAAkBL,mBAAlB,EAAuC,SAAvC,EAAkD,iBAAlD;AACA,oBAAOK,SAAP,EAAkBJ,eAAlB,EAAmC,OAAnC,EAA4C,eAA5C;;AAEA,QAAOI,SAAP;AACA,C;;AApCD;;AAEA;;AAEA;;;;AACA;;;;AAEA,IAAMX,iBAAiB,MAAvB","file":"macd.js","sourcesContent":["\r\n\r\nimport { rebind, merge } from \"../utils\";\r\n\r\nimport { macd } from \"../calculator\";\r\n\r\nimport baseIndicator from \"./baseIndicator\";\r\nimport { MACD as appearanceOptions } from \"./defaultOptionsForAppearance\";\r\n\r\nconst ALGORITHM_TYPE = \"MACD\";\r\n\r\nexport default function() {\r\n\r\n\tconst base = baseIndicator()\r\n\t\t.type(ALGORITHM_TYPE)\r\n\t\t.fill(appearanceOptions.fill)\r\n\t\t.stroke(appearanceOptions.stroke)\r\n\t\t.accessor(d => d.macd);\r\n\r\n\tconst underlyingAlgorithm = macd();\r\n\r\n\tconst mergedAlgorithm = merge()\r\n\t\t.algorithm(underlyingAlgorithm)\r\n\t\t.merge((datum, indicator) => { datum.macd = indicator; });\r\n\r\n\tconst indicator = function(data, options = { merge: true }) {\r\n\t\tif (options.merge) {\r\n\t\t\tif (!base.accessor()) throw new Error(`Set an accessor to ${ALGORITHM_TYPE} before calculating`);\r\n\t\t\treturn mergedAlgorithm(data);\r\n\t\t}\r\n\t\treturn underlyingAlgorithm(data);\r\n\t};\r\n\r\n\trebind(indicator, base, \"id\", \"accessor\", \"stroke\", \"fill\", \"echo\", \"type\");\r\n\trebind(indicator, underlyingAlgorithm, \"options\", \"undefinedLength\");\r\n\trebind(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\r\n\r\n\treturn indicator;\r\n}\r\n"]}