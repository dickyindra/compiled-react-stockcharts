{"version":3,"sources":["../../../../src/lib/series/AreaOnlySeries.js"],"names":["React","Component","PropTypes","area","d3Area","GenericChartComponent","getAxisCanvas","hexToRGBA","isDefined","first","functor","AreaOnlySeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","defined","base","canvasGradient","fill","stroke","opacity","interpolation","canvasClip","xScale","yScale","chartConfig","plotData","xAccessor","save","fillStyle","strokeStyle","beginPath","newBase","areaSeries","d","x","Math","round","y0","y1","context","curve","restore","style","className","newClassName","concat","propTypes","string","func","isRequired","number","oneOfType","object","defaultProps","isNaN","range"],"mappings":"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","file":"AreaOnlySeries.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { area as d3Area } from \"d3-shape\";\r\n\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\n\r\nimport { hexToRGBA, isDefined, first, functor } from \"../utils\";\r\n\r\nclass AreaOnlySeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { yAccessor, defined, base, canvasGradient } = this.props;\r\n\t\tconst { fill, stroke, opacity, interpolation, canvasClip } = this.props;\r\n\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\r\n\r\n\t\tif (canvasClip) {\r\n\t\t\tctx.save();\r\n\t\t\tcanvasClip(ctx, moreProps);\r\n\t\t}\r\n\r\n\t\tif (canvasGradient != null) {\r\n\t\t\tctx.fillStyle = canvasGradient(moreProps, ctx);\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = hexToRGBA(fill, opacity);\r\n\t\t}\r\n\t\tctx.strokeStyle = stroke;\r\n\r\n\t\tctx.beginPath();\r\n\t\tconst newBase = functor(base);\r\n\t\tconst areaSeries = d3Area()\r\n\t\t\t.defined(d => defined(yAccessor(d)))\r\n\t\t\t.x((d) => Math.round(xScale(xAccessor(d))))\r\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\r\n\t\t\t.y1((d) => Math.round(yScale(yAccessor(d))))\r\n\t\t\t.context(ctx);\r\n\r\n\t\tif (isDefined(interpolation)) {\r\n\t\t\tareaSeries.curve(interpolation);\r\n\t\t}\r\n\t\tareaSeries(plotData);\r\n\t\tctx.fill();\r\n\r\n\t\tif (canvasClip) {\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { yAccessor, defined, base, style } = this.props;\r\n\t\tconst { stroke, fill, className, opacity, interpolation } = this.props;\r\n\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\r\n\r\n\t\tconst newBase = functor(base);\r\n\t\tconst areaSeries = d3Area()\r\n\t\t\t.defined(d => defined(yAccessor(d)))\r\n\t\t\t.x((d) => Math.round(xScale(xAccessor(d))))\r\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\r\n\t\t\t.y1((d) => Math.round(yScale(yAccessor(d))));\r\n\r\n\t\tif (isDefined(interpolation)) {\r\n\t\t\tareaSeries.curve(interpolation);\r\n\t\t}\r\n\r\n\t\tconst d = areaSeries(plotData);\r\n\t\tconst newClassName = className.concat(isDefined(stroke) ? \"\" : \" line-stroke\");\r\n\t\treturn (\r\n\t\t\t<path\r\n\t\t\t\tstyle={style}\r\n\t\t\t\td={d}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tfill={hexToRGBA(fill, opacity)}\r\n\t\t\t\tclassName={newClassName}\r\n\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<GenericChartComponent\r\n\t\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\t\tdrawOn={[\"pan\"]}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAreaOnlySeries.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tyAccessor: PropTypes.func.isRequired,\r\n\tstroke: PropTypes.string,\r\n\tfill: PropTypes.string,\r\n\topacity: PropTypes.number,\r\n\tdefined: PropTypes.func,\r\n\tbase: PropTypes.oneOfType([\r\n\t\tPropTypes.func, PropTypes.number\r\n\t]),\r\n\tinterpolation: PropTypes.func,\r\n\tcanvasClip: PropTypes.func,\r\n\tstyle: PropTypes.object,\r\n\tcanvasGradient: PropTypes.func,\r\n};\r\n\r\nAreaOnlySeries.defaultProps = {\r\n\tclassName: \"line \",\r\n\tfill: \"none\",\r\n\topacity: 1,\r\n\tdefined: d => !isNaN(d),\r\n\tbase: (yScale /* , d, moreProps */) => first(yScale.range()),\r\n};\r\n\r\nexport default AreaOnlySeries;\r\n"]}