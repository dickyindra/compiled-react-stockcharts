{"version":3,"sources":["../../../../src/lib/series/GroupedBarSeries.js"],"names":["React","Component","PropTypes","GenericChartComponent","getAxisCanvas","StackedBarSeries","drawOnCanvasHelper","svgHelper","identityStack","GroupedBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","postProcessor","propTypes","baseAt","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","widthRatio","opacity","fill","string","className","yAccessor","arrayOf","defaultProps","spaceBetweenBar","array","map","each","x","offset","groupOffset","width","groupWidth"],"mappings":";;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,gBAAP,IAA2BC,kBAA3B,EAA+CC,SAA/C,EAA0DC,aAA1D,QAA+E,oBAA/E;;IAEMC,gB;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACZA,KADY;;AAElB,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAHkB;AAIlB;;;;+BACYE,G,EAAKC,S,EAAW;AAAA,OACpBC,SADoB,GACND,SADM,CACpBC,SADoB;;;AAG5BV,sBAAmBQ,GAAnB,EAAwB,KAAKJ,KAA7B,EAAoCK,SAApC,EAA+CC,SAA/C,EAA0DR,aAA1D,EAAyES,aAAzE;AACA;;;4BACSF,S,EAAW;AAAA,OACZC,SADY,GACED,SADF,CACZC,SADY;;;AAGpB,UAAO;AAAA;AAAA,MAAG,WAAU,sCAAb;AACLT,cAAU,KAAKG,KAAf,EAAsBK,SAAtB,EAAiCC,SAAjC,EAA4CR,aAA5C,EAA2DS,aAA3D;AADK,IAAP;AAGA;;;2BACQ;AACR,UAAO,oBAAC,qBAAD;AACN,aAAS,KAAKN,SADR;AAEN,gBAAY,KAAKE,YAFX;AAGN,kBAAcT,aAHR;AAIN,YAAQ,CAAC,KAAD;AAJF,KAAP;AAMA;;;;EAzB6BH,S;;AA4B/BQ,iBAAiBS,SAAjB,GAA6B;AAC5BC,SAAQjB,UAAUkB,SAAV,CAAoB,CAC3BlB,UAAUmB,MADiB,EAE3BnB,UAAUoB,IAFiB,CAApB,EAGLC,UAJyB;AAK5BC,YAAWtB,UAAUuB,KAAV,CAAgB,CAAC,IAAD,EAAO,MAAP,CAAhB,EAAgCF,UALf;AAM5BG,SAAQxB,UAAUyB,IAAV,CAAeJ,UANK;AAO5BK,aAAY1B,UAAUmB,MAAV,CAAiBE,UAPD;AAQ5BM,UAAS3B,UAAUmB,MAAV,CAAiBE,UARE;AAS5BO,OAAM5B,UAAUkB,SAAV,CAAoB,CACzBlB,UAAUoB,IADe,EACTpB,UAAU6B,MADD,CAApB,EAEHR,UAXyB;AAY5BS,YAAW9B,UAAUkB,SAAV,CAAoB,CAC9BlB,UAAUoB,IADoB,EACdpB,UAAU6B,MADI,CAApB,EAERR,UAdyB;AAe5BU,YAAW/B,UAAUgC,OAAV,CAAkBhC,UAAUoB,IAA5B;AAfiB,CAA7B;;AAkBAb,iBAAiB0B,YAAjB,gBACI9B,iBAAiB8B,YADrB;AAECP,aAAY,GAFb;AAGCQ,kBAAiB;AAHlB;;AAMA,SAASnB,aAAT,CAAuBoB,KAAvB,EAA8B;AAC7B,QAAOA,MAAMC,GAAN,CAAU,gBAAQ;AACxB,sBACIC,IADJ;AAECC,MAAGD,KAAKC,CAAL,GAASD,KAAKE,MAAd,GAAuBF,KAAKG,WAFhC;AAGCC,UAAOJ,KAAKK;AAHb;AAKA,EANM,CAAP;AAOA;;AAED,eAAenC,gBAAf","file":"GroupedBarSeries.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\nimport StackedBarSeries, { drawOnCanvasHelper, svgHelper, identityStack } from \"./StackedBarSeries\";\r\n\r\nclass GroupedBarSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\r\n\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, identityStack, postProcessor);\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\r\n\t\treturn <g className=\"react-stockcharts-grouped-bar-series\">\r\n\t\t\t{svgHelper(this.props, moreProps, xAccessor, identityStack, postProcessor)}\r\n\t\t</g>;\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nGroupedBarSeries.propTypes = {\r\n\tbaseAt: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.func,\r\n\t]).isRequired,\r\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\r\n\tstroke: PropTypes.bool.isRequired,\r\n\twidthRatio: PropTypes.number.isRequired,\r\n\topacity: PropTypes.number.isRequired,\r\n\tfill: PropTypes.oneOfType([\r\n\t\tPropTypes.func, PropTypes.string\r\n\t]).isRequired,\r\n\tclassName: PropTypes.oneOfType([\r\n\t\tPropTypes.func, PropTypes.string\r\n\t]).isRequired,\r\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\r\n};\r\n\r\nGroupedBarSeries.defaultProps = {\r\n\t...StackedBarSeries.defaultProps,\r\n\twidthRatio: 0.8,\r\n\tspaceBetweenBar: 5,\r\n};\r\n\r\nfunction postProcessor(array) {\r\n\treturn array.map(each => {\r\n\t\treturn {\r\n\t\t\t...each,\r\n\t\t\tx: each.x + each.offset - each.groupOffset,\r\n\t\t\twidth: each.groupWidth,\r\n\t\t};\r\n\t});\r\n}\r\n\r\nexport default GroupedBarSeries;\r\n"]}