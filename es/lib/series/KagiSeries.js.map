{"version":3,"sources":["../../../../src/lib/series/KagiSeries.js"],"names":["React","Component","PropTypes","line","curveStepBefore","GenericChartComponent","getAxisCanvas","isDefined","isNotDefined","KagiSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","className","stroke","fill","strokeWidth","paths","helper","map","each","i","dataSeries","x","item","y","curve","plot","type","propTypes","string","object","number","isRequired","defaultProps","yang","yin","currentValueStroke","begin","forEach","strokeStyle","lineWidth","beginPath","prevX","d","moveTo","lineTo","lastPlot","length","last","y1","y2","kagiLine","kagi","idx","close","startAs","push","open","changeTo","changePoint","added","current","reverseAt"],"mappings":"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","file":"KagiSeries.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { line, curveStepBefore } from \"d3-shape\";\r\n\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\nimport { isDefined, isNotDefined } from \"../utils\";\r\n\r\nclass KagiSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\r\n\t\tdrawOnCanvas(ctx, this.props, moreProps, xAccessor);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\t\tconst { className, stroke, fill, strokeWidth } = this.props;\r\n\r\n\t\tconst paths = helper(plotData, xAccessor).map((each, i) => {\r\n\t\t\tconst dataSeries = line()\r\n\t\t\t\t.x((item) => xScale(item[0]))\r\n\t\t\t\t.y((item) => yScale(item[1]))\r\n\t\t\t\t.curve(curveStepBefore);\r\n\r\n\t\t\tdataSeries(each.plot);\r\n\r\n\t\t\treturn (<path key={i} d={dataSeries(each.plot)} className={each.type}\r\n\t\t\t\tstroke={stroke[each.type]} fill={fill[each.type]} strokeWidth={strokeWidth} />);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<g className={className}>\r\n\t\t\t\t{paths}\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n}\r\nKagiSeries.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tstroke: PropTypes.object,\r\n\tfill: PropTypes.object,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n};\r\n\r\nKagiSeries.defaultProps = {\r\n\tclassName: \"react-stockcharts-kagi\",\r\n\tstrokeWidth: 2,\r\n\tstroke: {\r\n\t\tyang: \"#6BA583\",\r\n\t\tyin: \"#E60000\"\r\n\t},\r\n\tfill: {\r\n\t\tyang: \"none\",\r\n\t\tyin: \"none\"\r\n\t},\r\n\tcurrentValueStroke: \"#000000\",\r\n};\r\n\r\nfunction drawOnCanvas(ctx, props, moreProps, xAccessor) {\r\n\tconst { stroke, strokeWidth, currentValueStroke } = props;\r\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\tconst paths = helper(plotData, xAccessor);\r\n\r\n\tlet begin = true;\r\n\r\n\tpaths.forEach((each) => {\r\n\t\tctx.strokeStyle = stroke[each.type];\r\n\t\tctx.lineWidth = strokeWidth;\r\n\r\n\t\tctx.beginPath();\r\n\t\tlet prevX;\r\n\t\teach.plot.forEach(d => {\r\n\t\t\tconst [x, y] = [xScale(d[0]), yScale(d[1])];\r\n\t\t\tif (begin) {\r\n\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\tbegin = false;\r\n\t\t\t} else {\r\n\t\t\t\tif (isDefined(prevX)) {\r\n\t\t\t\t\tctx.lineTo(prevX, y);\r\n\t\t\t\t}\r\n\t\t\t\tctx.lineTo(x, y);\r\n\t\t\t}\r\n\t\t\tprevX = x;\r\n\t\t\t// console.log(d);\r\n\r\n\t\t});\r\n\t\tctx.stroke();\r\n\t});\r\n\tconst lastPlot = paths[paths.length - 1].plot;\r\n\tconst last = lastPlot[lastPlot.length - 1];\r\n\tctx.beginPath();\r\n\t// ctx.strokeStyle = \"black\";\r\n\tctx.lineWidth = 1;\r\n\r\n\tconst [x, y1, y2] = [xScale(last[0]), yScale(last[2]), yScale(last[3])];\r\n\t// console.log(last, x, y);\r\n\tctx.moveTo(x, y1);\r\n\tctx.lineTo(x + 10, y1);\r\n\tctx.stroke();\r\n\r\n\tctx.beginPath();\r\n\tctx.strokeStyle = currentValueStroke;\r\n\tctx.moveTo(x - 10, y2);\r\n\tctx.lineTo(x, y2);\r\n\tctx.stroke();\r\n}\r\n\r\nfunction helper(plotData, xAccessor) {\r\n\tconst kagiLine = [];\r\n\tlet kagi = {};\r\n\tlet d = plotData[0];\r\n\tlet idx = xAccessor(d);\r\n\r\n\tfor (let i = 0; i < plotData.length; i++) {\r\n\t\td = plotData[i];\r\n\r\n\t\tif (isNotDefined(d.close)) continue;\r\n\t\tif (isNotDefined(kagi.type)) kagi.type = d.startAs;\r\n\t\tif (isNotDefined(kagi.plot)) kagi.plot = [];\r\n\r\n\t\tidx = xAccessor(d);\r\n\t\tkagi.plot.push([idx, d.open]);\r\n\r\n\t\tif (isDefined(d.changeTo)) {\r\n\t\t\tkagi.plot.push([idx, d.changePoint]);\r\n\t\t\tkagi.added = true;\r\n\t\t\tkagiLine.push(kagi);\r\n\r\n\t\t\tkagi = {\r\n\t\t\t\ttype: d.changeTo,\r\n\t\t\t\tplot: [],\r\n\t\t\t\tadded: false,\r\n\t\t\t};\r\n\t\t\tkagi.plot.push([idx, d.changePoint]);\r\n\t\t}\r\n\t}\r\n\r\n\tif (!kagi.added) {\r\n\t\tkagi.plot.push([idx, d.close, d.current, d.reverseAt]);\r\n\t\tkagiLine.push(kagi);\r\n\t}\r\n\r\n\t// console.log(d.reverseAt);\r\n\r\n\treturn kagiLine;\r\n}\r\n\r\nexport default KagiSeries;\r\n"]}