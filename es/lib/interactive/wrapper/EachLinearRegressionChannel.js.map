{"version":3,"sources":["../../../../../src/lib/interactive/wrapper/EachLinearRegressionChannel.js"],"names":["React","Component","PropTypes","noop","getCurrentItem","saveNodeType","isHover","HoverTextNearMouse","default","LinearRegressionChannelWithArea","edge1Provider","edge2Provider","ClickableCircle","EachLinearRegressionChannel","props","handleEdge1Drag","bind","handleEdge2Drag","handleHover","nodes","state","hover","moreProps","index","onDrag","snapTo","x2Value","getNewXY","x1Value","hovering","setState","appearance","edgeInteractiveCursor","hoverText","interactive","selected","onDragComplete","stroke","strokeWidth","strokeOpacity","fill","fillOpacity","r","edgeStrokeWidth","edgeFill","edgeStroke","hoverHandler","onHover","onUnHover","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","xScale","xAccessor","plotData","mouseXY","currentItem","x","y","propTypes","defaultClassName","string","any","isRequired","number","shape","func","bool","object","defaultProps","bgHeight","bgWidth"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,UAAtC;;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,SACCC,WAAWC,+BADZ,EAECC,aAFD,EAGCC,aAHD,QAIO,+CAJP;;AAMA,OAAOC,eAAP,MAA4B,+BAA5B;;IAEMC,2B;;;AACL,sCAAYC,KAAZ,EAAmB;AAAA;;AAAA,wJACZA,KADY;;AAGlB,QAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,QAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;;AAEA,QAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,OAAnB;;AAEA,QAAKV,OAAL,GAAeA,QAAQU,IAAR,OAAf;AACA,QAAKX,YAAL,GAAoBA,aAAaW,IAAb,OAApB;AACA,QAAKG,KAAL,GAAa,EAAb;;AAEA,QAAKC,KAAL,GAAa;AACZC,UAAO;AADK,GAAb;AAZkB;AAelB;;;;kCACeC,S,EAAW;AAAA,gBACQ,KAAKR,KADb;AAAA,OAClBS,KADkB,UAClBA,KADkB;AAAA,OACXC,MADW,UACXA,MADW;AAAA,OACHC,MADG,UACHA,MADG;AAAA,OAGzBC,OAHyB,GAItB,KAAKZ,KAJiB,CAGzBY,OAHyB;;AAAA,mBAMRC,SAASL,SAAT,EAAoBG,MAApB,CANQ;AAAA;AAAA,OAMnBG,OANmB;;AAQ1BJ,UAAOD,KAAP,EAAc;AACbK,oBADa;AAEbF;AAFa,IAAd;AAIA;;;kCACeJ,S,EAAW;AAAA,iBACQ,KAAKR,KADb;AAAA,OAClBS,KADkB,WAClBA,KADkB;AAAA,OACXC,MADW,WACXA,MADW;AAAA,OACHC,MADG,WACHA,MADG;AAAA,OAGzBG,OAHyB,GAItB,KAAKd,KAJiB,CAGzBc,OAHyB;;AAAA,oBAMRD,SAASL,SAAT,EAAoBG,MAApB,CANQ;AAAA;AAAA,OAMnBC,OANmB;;AAQ1BF,UAAOD,KAAP,EAAc;AACbK,oBADa;AAEbF;AAFa,IAAd;AAIA;;;8BACWJ,S,EAAW;AACtB,OAAI,KAAKF,KAAL,CAAWC,KAAX,KAAqBC,UAAUO,QAAnC,EAA6C;AAC5C,SAAKC,QAAL,CAAc;AACbT,YAAOC,UAAUO;AADJ,KAAd;AAGA;AACD;;;2BACQ;AAAA,iBAUJ,KAAKf,KAVD;AAAA,OAEPc,OAFO,WAEPA,OAFO;AAAA,OAGPF,OAHO,WAGPA,OAHO;AAAA,OAIPK,UAJO,WAIPA,UAJO;AAAA,OAKPC,qBALO,WAKPA,qBALO;AAAA,OAMPC,SANO,WAMPA,SANO;AAAA,OAOPC,WAPO,WAOPA,WAPO;AAAA,OAQPC,QARO,WAQPA,QARO;AAAA,OASPC,cATO,WASPA,cATO;AAAA,OAYPC,MAZO,GAqBJN,UArBI,CAYPM,MAZO;AAAA,OAaPC,WAbO,GAqBJP,UArBI,CAaPO,WAbO;AAAA,OAcPC,aAdO,GAqBJR,UArBI,CAcPQ,aAdO;AAAA,OAePC,IAfO,GAqBJT,UArBI,CAePS,IAfO;AAAA,OAgBPC,WAhBO,GAqBJV,UArBI,CAgBPU,WAhBO;AAAA,OAiBPC,CAjBO,GAqBJX,UArBI,CAiBPW,CAjBO;AAAA,OAkBPC,eAlBO,GAqBJZ,UArBI,CAkBPY,eAlBO;AAAA,OAmBPC,QAnBO,GAqBJb,UArBI,CAmBPa,QAnBO;AAAA,OAoBPC,UApBO,GAqBJd,UArBI,CAoBPc,UApBO;AAAA,OAsBAxB,KAtBA,GAsBU,KAAKD,KAtBf,CAsBAC,KAtBA;;;AAwBR,OAAMyB,eAAeZ,cAClB,EAAEa,SAAS,KAAK7B,WAAhB,EAA6B8B,WAAW,KAAK9B,WAA7C,EADkB,GAElB,EAFH;;AAxBQ,OA6BC+B,gBA7BD,GAiCJhB,SAjCI,CA6BPiB,MA7BO;AAAA,OA8BOC,iBA9BP,GAiCJlB,SAjCI,CA8BPmB,YA9BO;AAAA,OA+BDC,mBA/BC,GAiCJpB,SAjCI,CA+BPqB,IA/BO;AAAA,OAgCJC,kBAhCI,4BAiCJtB,SAjCI;;AAmCR,UAAO;AAAA;AAAA;AACN,wBAAC,+BAAD;AACC,UAAK,KAAK5B,YAAL,CAAkB,MAAlB,CADN;AAEC,eAAU8B,YAAYd;AAFvB,OAGKyB,YAHL;;AAKC,cAASlB,OALV;AAMC,cAASF,OANV;AAOC,WAAMc,IAPP;AAQC,aAAQH,MART;AASC,kBAAchB,SAASc,QAAV,GAAsBG,cAAc,CAApC,GAAwCA,WATtD;AAUC,oBAAeC,aAVhB;AAWC,kBAAaE,WAXd,IADM;AAaN,wBAAC,eAAD;AACC,UAAK,KAAKpC,YAAL,CAAkB,OAAlB,CADN;AAEC,WAAM8B,YAAYd,KAFnB;AAGC,iBAAYX,cAAc,KAAKI,KAAnB,CAHb;AAIC,QAAG4B,CAJJ;AAKC,WAAME,QALP;AAMC,aAAQC,UANT;AAOC,kBAAaF,eAPd;AAQC,6BAAwBX,qBARzB;AASC,aAAQ,KAAKjB,eATd;AAUC,qBAAgBqB,cAVjB,GAbM;AAwBN,wBAAC,eAAD;AACC,UAAK,KAAK/B,YAAL,CAAkB,OAAlB,CADN;AAEC,WAAM8B,YAAYd,KAFnB;AAGC,iBAAYV,cAAc,KAAKG,KAAnB,CAHb;AAIC,QAAG4B,CAJJ;AAKC,WAAME,QALP;AAMC,aAAQC,UANT;AAOC,kBAAaF,eAPd;AAQC,6BAAwBX,qBARzB;AASC,aAAQ,KAAKf,eATd;AAUC,qBAAgBmB,cAVjB,GAxBM;AAmCN,wBAAC,kBAAD;AACC,WAAMa,oBAAoB5B;AAD3B,OAEKkC,kBAFL;AAGC,WAAMpB,WAAWgB,iBAAX,GAA+BE;AAHtC;AAnCM,IAAP;AAyCA;;;;EA9HwCpD,S;;AAiI1C,OAAO,SAAS0B,QAAT,CAAkBL,SAAlB,EAA6BG,MAA7B,EAAqC;AAAA,KACnC+B,MADmC,GACMlC,SADN,CACnCkC,MADmC;AAAA,KAC3BC,SAD2B,GACMnC,SADN,CAC3BmC,SAD2B;AAAA,KAChBC,QADgB,GACMpC,SADN,CAChBoC,QADgB;AAAA,KACNC,OADM,GACMrC,SADN,CACNqC,OADM;;;AAG3C,KAAMC,cAAcxD,eAAeoD,MAAf,EAAuBC,SAAvB,EAAkCE,OAAlC,EAA2CD,QAA3C,CAApB;AACA,KAAMG,IAAIJ,UAAUG,WAAV,CAAV;AACA,KAAME,IAAIrC,OAAOmC,WAAP,CAAV;;AAEA,QAAO,CAACC,CAAD,EAAIC,CAAJ,CAAP;AACA;;AAEDjD,4BAA4BkD,SAA5B,GAAwC;AACvCC,mBAAkB9D,UAAU+D,MADW;;AAGvCrC,UAAS1B,UAAUgE,GAAV,CAAcC,UAHgB;AAIvCzC,UAASxB,UAAUgE,GAAV,CAAcC,UAJgB;;AAMvC5C,QAAOrB,UAAUkE,MANsB;;AAQvCrC,aAAY7B,UAAUmE,KAAV,CAAgB;AAC3BhC,UAAQnC,UAAU+D,MAAV,CAAiBE,UADE;AAE3B1B,eAAavC,UAAUkE,MAAV,CAAiBD,UAFH;AAG3B5B,iBAAerC,UAAUkE,MAAV,CAAiBD,UAHL;AAI3B7B,eAAapC,UAAUkE,MAAV,CAAiBD,UAJH;AAK3B3B,QAAMtC,UAAU+D,MAAV,CAAiBE,UALI;AAM3BxB,mBAAiBzC,UAAUkE,MAAV,CAAiBD,UANP;AAO3BtB,cAAY3C,UAAU+D,MAAV,CAAiBE,UAPF;AAQ3BvB,YAAU1C,UAAU+D,MAAV,CAAiBE,UARA;AAS3BzB,KAAGxC,UAAUkE,MAAV,CAAiBD;AATO,EAAhB,EAUTA,UAlBoC;;AAoBvCnC,wBAAuB9B,UAAU+D,MApBM;AAqBvCzC,SAAQtB,UAAUoE,IAAV,CAAeH,UArBgB;AAsBvC/B,iBAAgBlC,UAAUoE,IAAV,CAAeH,UAtBQ;AAuBvC1C,SAAQvB,UAAUoE,IAvBqB;AAwBvCpC,cAAahC,UAAUqE,IAAV,CAAeJ,UAxBW;AAyBvChC,WAAUjC,UAAUqE,IAAV,CAAeJ,UAzBc;;AA2BvClC,YAAW/B,UAAUsE,MAAV,CAAiBL;AA3BW,CAAxC;;AA8BAtD,4BAA4B4D,YAA5B,GAA2C;AAC1CjD,SAAQrB,IADkC;AAE1CiC,iBAAgBjC,IAF0B;;AAI1C4B,aAAY;AACXM,UAAQ,SADG;AAEXI,eAAa,GAFF;AAGXF,iBAAe,CAHJ;AAIXD,eAAa,CAJF;AAKXE,QAAM,SALK;AAMXG,mBAAiB,CANN;AAOXE,cAAY,SAPD;AAQXD,YAAU,SARC;AASXF,KAAG;AATQ,EAJ8B;AAe1CR,cAAa,IAf6B;AAgB1CC,WAAU,KAhBgC;AAiB1CF,yBACI1B,mBAAmBkE,YADvB;AAECvB,UAAQ,IAFT;AAGCwB,YAAU,EAHX;AAICC,WAAS,GAJV;AAKCrB,QAAM;AALP;AAjB0C,CAA3C;;AA0BA,eAAezC,2BAAf","file":"EachLinearRegressionChannel.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { noop } from \"../../utils\";\r\nimport { getCurrentItem } from \"../../utils/ChartDataUtil\";\r\nimport { saveNodeType, isHover } from \"../utils\";\r\n\r\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\r\nimport {\r\n\tdefault as LinearRegressionChannelWithArea,\r\n\tedge1Provider,\r\n\tedge2Provider\r\n} from \"../components/LinearRegressionChannelWithArea\";\r\n\r\nimport ClickableCircle from \"../components/ClickableCircle\";\r\n\r\nclass EachLinearRegressionChannel extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\r\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\r\n\r\n\t\tthis.handleHover = this.handleHover.bind(this);\r\n\r\n\t\tthis.isHover = isHover.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\t\tthis.nodes = {};\r\n\r\n\t\tthis.state = {\r\n\t\t\thover: false,\r\n\t\t};\r\n\t}\r\n\thandleEdge1Drag(moreProps) {\r\n\t\tconst { index, onDrag, snapTo } = this.props;\r\n\t\tconst {\r\n\t\t\tx2Value,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x1Value] = getNewXY(moreProps, snapTo);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1Value,\r\n\t\t\tx2Value,\r\n\t\t});\r\n\t}\r\n\thandleEdge2Drag(moreProps) {\r\n\t\tconst { index, onDrag, snapTo } = this.props;\r\n\t\tconst {\r\n\t\t\tx1Value,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x2Value] = getNewXY(moreProps, snapTo);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1Value,\r\n\t\t\tx2Value,\r\n\t\t});\r\n\t}\r\n\thandleHover(moreProps) {\r\n\t\tif (this.state.hover !== moreProps.hovering) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thover: moreProps.hovering\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tx1Value,\r\n\t\t\tx2Value,\r\n\t\t\tappearance,\r\n\t\t\tedgeInteractiveCursor,\r\n\t\t\thoverText,\r\n\t\t\tinteractive,\r\n\t\t\tselected,\r\n\t\t\tonDragComplete,\r\n\t\t} = this.props;\r\n\t\tconst {\r\n\t\t\tstroke,\r\n\t\t\tstrokeWidth,\r\n\t\t\tstrokeOpacity,\r\n\t\t\tfill,\r\n\t\t\tfillOpacity,\r\n\t\t\tr,\r\n\t\t\tedgeStrokeWidth,\r\n\t\t\tedgeFill,\r\n\t\t\tedgeStroke,\r\n\t\t} = appearance;\r\n\t\tconst { hover } = this.state;\r\n\r\n\t\tconst hoverHandler = interactive\r\n\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\r\n\t\t\t: {};\r\n\r\n\t\tconst {\r\n\t\t\tenable: hoverTextEnabled,\r\n\t\t\tselectedText: hoverTextSelected,\r\n\t\t\ttext: hoverTextUnselected,\r\n\t\t\t...restHoverTextProps\r\n\t\t} = hoverText;\r\n\r\n\t\treturn <g>\r\n\t\t\t<LinearRegressionChannelWithArea\r\n\t\t\t\tref={this.saveNodeType(\"area\")}\r\n\t\t\t\tselected={selected || hover}\r\n\t\t\t\t{...hoverHandler}\r\n\r\n\t\t\t\tx1Value={x1Value}\r\n\t\t\t\tx2Value={x2Value}\r\n\t\t\t\tfill={fill}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\r\n\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\tfillOpacity={fillOpacity} />\r\n\t\t\t<ClickableCircle\r\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\r\n\t\t\t\tshow={selected || hover}\r\n\t\t\t\txyProvider={edge1Provider(this.props)}\r\n\t\t\t\tr={r}\r\n\t\t\t\tfill={edgeFill}\r\n\t\t\t\tstroke={edgeStroke}\r\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\r\n\t\t\t\tonDrag={this.handleEdge1Drag}\r\n\t\t\t\tonDragComplete={onDragComplete} />\r\n\t\t\t<ClickableCircle\r\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\r\n\t\t\t\tshow={selected || hover}\r\n\t\t\t\txyProvider={edge2Provider(this.props)}\r\n\t\t\t\tr={r}\r\n\t\t\t\tfill={edgeFill}\r\n\t\t\t\tstroke={edgeStroke}\r\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\r\n\t\t\t\tonDrag={this.handleEdge2Drag}\r\n\t\t\t\tonDragComplete={onDragComplete} />\r\n\t\t\t<HoverTextNearMouse\r\n\t\t\t\tshow={hoverTextEnabled && hover}\r\n\t\t\t\t{...restHoverTextProps}\r\n\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\r\n\t\t\t/>\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\nexport function getNewXY(moreProps, snapTo) {\r\n\tconst { xScale, xAccessor, plotData, mouseXY } = moreProps;\r\n\r\n\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\r\n\tconst x = xAccessor(currentItem);\r\n\tconst y = snapTo(currentItem);\r\n\r\n\treturn [x, y];\r\n}\r\n\r\nEachLinearRegressionChannel.propTypes = {\r\n\tdefaultClassName: PropTypes.string,\r\n\r\n\tx1Value: PropTypes.any.isRequired,\r\n\tx2Value: PropTypes.any.isRequired,\r\n\r\n\tindex: PropTypes.number,\r\n\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tfillOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tfill: PropTypes.string.isRequired,\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tr: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\r\n\tedgeInteractiveCursor: PropTypes.string,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n\tsnapTo: PropTypes.func,\r\n\tinteractive: PropTypes.bool.isRequired,\r\n\tselected: PropTypes.bool.isRequired,\r\n\r\n\thoverText: PropTypes.object.isRequired,\r\n};\r\n\r\nEachLinearRegressionChannel.defaultProps = {\r\n\tonDrag: noop,\r\n\tonDragComplete: noop,\r\n\r\n\tappearance: {\r\n\t\tstroke: \"#000000\",\r\n\t\tfillOpacity: 0.7,\r\n\t\tstrokeOpacity: 1,\r\n\t\tstrokeWidth: 1,\r\n\t\tfill: \"#8AAFE2\",\r\n\t\tedgeStrokeWidth: 2,\r\n\t\tedgeStroke: \"#000000\",\r\n\t\tedgeFill: \"#FFFFFF\",\r\n\t\tr: 5,\r\n\t},\r\n\tinteractive: true,\r\n\tselected: false,\r\n\thoverText: {\r\n\t\t...HoverTextNearMouse.defaultProps,\r\n\t\tenable: true,\r\n\t\tbgHeight: 18,\r\n\t\tbgWidth: 175,\r\n\t\ttext: \"Click and drag the edge circles\",\r\n\t}\r\n};\r\n\r\nexport default EachLinearRegressionChannel;"]}