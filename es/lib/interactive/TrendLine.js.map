{"version":3,"sources":["../../../../src/lib/interactive/TrendLine.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","strokeDashTypes","getValueFromOverride","terminate","saveNodeType","isHoverForInteractiveType","EachTrendLine","StraightLine","MouseLocationIndicator","HoverTextNearMouse","TrendLine","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","getSelectionState","state","nodes","index","newXYValue","setState","override","moreProps","trends","newTrends","map","each","idx","start","x1Value","y1Value","end","x2Value","y2Value","selected","onComplete","xyValue","current","mouseMoved","e","onStart","appearance","type","d","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","stroke","strokeWidth","strokeOpacity","eachAppearance","hoverTextWithDefault","defaultProps","strokeDasharray","edgeStroke","edgeFill","edgeStrokeWidth","r","propTypes","bool","isRequired","func","onSelect","string","number","oneOf","object","array","shape","button","shiftKey","enable","bgHeight","bgWidth","text","selectedText"],"mappings":"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","file":"TrendLine.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\r\n\r\nimport {\r\n\tgetValueFromOverride,\r\n\tterminate,\r\n\tsaveNodeType,\r\n\tisHoverForInteractiveType,\r\n} from \"./utils\";\r\n\r\nimport EachTrendLine from \"./wrapper/EachTrendLine\";\r\nimport StraightLine from \"./components/StraightLine\";\r\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\r\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\r\n\r\nclass TrendLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleStart = this.handleStart.bind(this);\r\n\t\tthis.handleEnd = this.handleEnd.bind(this);\r\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\r\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\r\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\r\n\r\n\t\tthis.terminate = terminate.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\r\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"trends\")\r\n\t\t\t.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t};\r\n\t\tthis.nodes = [];\r\n\t}\r\n\thandleDragLine(index, newXYValue) {\r\n\t\tthis.setState({\r\n\t\t\toverride: {\r\n\t\t\t\tindex,\r\n\t\t\t\t...newXYValue\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleDragLineComplete(moreProps) {\r\n\t\tconst { override } = this.state;\r\n\t\tif (isDefined(override)) {\r\n\t\t\tconst { trends } = this.props;\r\n\t\t\tconst newTrends = trends\r\n\t\t\t\t.map((each, idx) => idx === override.index\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t...each,\r\n\t\t\t\t\t\tstart: [override.x1Value, override.y1Value],\r\n\t\t\t\t\t\tend: [override.x2Value, override.y2Value],\r\n\t\t\t\t\t\tselected: true,\r\n\t\t\t\t\t}\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t...each,\r\n\t\t\t\t\t\tselected: false,\r\n\t\t\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\toverride: null,\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onComplete(newTrends, moreProps);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleDrawLine(xyValue) {\r\n\t\tconst { current } = this.state;\r\n\t\tif (isDefined(current) && isDefined(current.start)) {\r\n\t\t\tthis.mouseMoved = true;\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: {\r\n\t\t\t\t\tstart: current.start,\r\n\t\t\t\t\tend: xyValue,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleStart(xyValue, moreProps, e) {\r\n\t\tconst { current } = this.state;\r\n\r\n\t\tif (isNotDefined(current) || isNotDefined(current.start)) {\r\n\t\t\tthis.mouseMoved = false;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: {\r\n\t\t\t\t\tstart: xyValue,\r\n\t\t\t\t\tend: null,\r\n\t\t\t\t},\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onStart(moreProps, e);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleEnd(xyValue, moreProps, e) {\r\n\t\tconst { current } = this.state;\r\n\t\tconst { trends, appearance, type } = this.props;\r\n\r\n\t\tif (this.mouseMoved\r\n\t\t\t&& isDefined(current)\r\n\t\t\t&& isDefined(current.start)\r\n\t\t) {\r\n\t\t\tconst newTrends = [\r\n\t\t\t\t...trends.map(d => ({ ...d, selected: false })),\r\n\t\t\t\t{\r\n\t\t\t\t\tstart: current.start,\r\n\t\t\t\t\tend: xyValue,\r\n\t\t\t\t\tselected: true,\r\n\t\t\t\t\tappearance,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: null,\r\n\t\t\t\ttrends: newTrends\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onComplete(newTrends, moreProps, e);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { appearance } = this.props;\r\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo, type } = this.props;\r\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\r\n\t\tconst { currentPositionstrokeOpacity, currentPositionStrokeWidth } = this.props;\r\n\t\tconst { hoverText, trends } = this.props;\r\n\t\tconst { current, override } = this.state;\r\n\r\n\t\tconst tempLine = isDefined(current) && isDefined(current.end)\r\n\t\t\t? <StraightLine type={type}\r\n\t\t\t\tnoHover\r\n\t\t\t\tx1Value={current.start[0]}\r\n\t\t\t\ty1Value={current.start[1]}\r\n\t\t\t\tx2Value={current.end[0]}\r\n\t\t\t\ty2Value={current.end[1]}\r\n\t\t\t\tstroke={appearance.stroke}\r\n\t\t\t\tstrokeWidth={appearance.strokeWidth}\r\n\t\t\t\tstrokeOpacity={appearance.strokeOpacity} />\r\n\t\t\t: null;\r\n\r\n\t\treturn <g>\r\n\t\t\t{trends.map((each, idx) => {\r\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\r\n\t\t\t\t\t? { ...appearance, ...each.appearance }\r\n\t\t\t\t\t: appearance;\r\n\r\n\t\t\t\tconst hoverTextWithDefault = {\r\n\t\t\t\t\t...TrendLine.defaultProps.hoverText,\r\n\t\t\t\t\t...hoverText\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn <EachTrendLine key={idx}\r\n\t\t\t\t\tref={this.saveNodeType(idx)}\r\n\t\t\t\t\tindex={idx}\r\n\t\t\t\t\ttype={each.type}\r\n\t\t\t\t\tselected={each.selected}\r\n\t\t\t\t\tx1Value={getValueFromOverride(override, idx, \"x1Value\", each.start[0])}\r\n\t\t\t\t\ty1Value={getValueFromOverride(override, idx, \"y1Value\", each.start[1])}\r\n\t\t\t\t\tx2Value={getValueFromOverride(override, idx, \"x2Value\", each.end[0])}\r\n\t\t\t\t\ty2Value={getValueFromOverride(override, idx, \"y2Value\", each.end[1])}\r\n\t\t\t\t\tstroke={eachAppearance.stroke}\r\n\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\r\n\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\r\n\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\r\n\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\r\n\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\r\n\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\r\n\t\t\t\t\tr={eachAppearance.r}\r\n\t\t\t\t\thoverText={hoverTextWithDefault}\r\n\t\t\t\t\tonDrag={this.handleDragLine}\r\n\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\r\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\r\n\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\r\n\t\t\t\t/>;\r\n\t\t\t})}\r\n\t\t\t{tempLine}\r\n\t\t\t<MouseLocationIndicator\r\n\t\t\t\tenabled={enabled}\r\n\t\t\t\tsnap={snap}\r\n\t\t\t\tshouldDisableSnap={shouldDisableSnap}\r\n\t\t\t\tsnapTo={snapTo}\r\n\t\t\t\tr={currentPositionRadius}\r\n\t\t\t\tstroke={currentPositionStroke}\r\n\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\r\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\r\n\t\t\t\tonMouseDown={this.handleStart}\r\n\t\t\t\tonClick={this.handleEnd}\r\n\t\t\t\tonMouseMove={this.handleDrawLine}\r\n\t\t\t/>\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\n\r\nTrendLine.propTypes = {\r\n\tsnap: PropTypes.bool.isRequired,\r\n\tenabled: PropTypes.bool.isRequired,\r\n\tsnapTo: PropTypes.func,\r\n\tshouldDisableSnap: PropTypes.func.isRequired,\r\n\r\n\tonStart: PropTypes.func.isRequired,\r\n\tonComplete: PropTypes.func.isRequired,\r\n\tonSelect: PropTypes.func,\r\n\r\n\tcurrentPositionStroke: PropTypes.string,\r\n\tcurrentPositionStrokeWidth: PropTypes.number,\r\n\tcurrentPositionstrokeOpacity: PropTypes.number,\r\n\tcurrentPositionRadius: PropTypes.number,\r\n\ttype: PropTypes.oneOf([\r\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\r\n\t\t\"RAY\", // extends to +/-Infinity in one direction\r\n\t\t\"LINE\", // extends between the set bounds\r\n\t]),\r\n\thoverText: PropTypes.object.isRequired,\r\n\r\n\ttrends: PropTypes.array.isRequired,\r\n\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t}).isRequired\r\n};\r\n\r\nTrendLine.defaultProps = {\r\n\ttype: \"XLINE\",\r\n\r\n\tonStart: noop,\r\n\tonComplete: noop,\r\n\tonSelect: noop,\r\n\r\n\tcurrentPositionStroke: \"#000000\",\r\n\tcurrentPositionstrokeOpacity: 1,\r\n\tcurrentPositionStrokeWidth: 3,\r\n\tcurrentPositionRadius: 0,\r\n\r\n\tshouldDisableSnap: e => (e.button === 2 || e.shiftKey),\r\n\thoverText: {\r\n\t\t...HoverTextNearMouse.defaultProps,\r\n\t\tenable: true,\r\n\t\tbgHeight: \"auto\",\r\n\t\tbgWidth: \"auto\",\r\n\t\ttext: \"Click to select object\",\r\n\t\tselectedText: \"\",\r\n\t},\r\n\ttrends: [],\r\n\r\n\tappearance: {\r\n\t\tstroke: \"#000000\",\r\n\t\tstrokeOpacity: 1,\r\n\t\tstrokeWidth: 1,\r\n\t\tstrokeDasharray: \"Solid\",\r\n\t\tedgeStrokeWidth: 1,\r\n\t\tedgeFill: \"#FFFFFF\",\r\n\t\tedgeStroke: \"#000000\",\r\n\t\tr: 6,\r\n\t}\r\n};\r\n\r\nexport default TrendLine;\r\n"]}