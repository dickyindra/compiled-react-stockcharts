{"version":3,"sources":["../../../../src/lib/tooltip/RSITooltip.js"],"names":["format","React","Component","PropTypes","displayValuesFor","GenericChartComponent","isDefined","functor","ToolTipText","ToolTipTSpanLabel","RSITooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","className","options","labelFill","textFill","chartConfig","width","height","currentItem","rsi","value","originProp","origin","x","y","tooltipLabel","windowSize","propTypes","oneOfType","array","func","isRequired","shape","number","string","defaultProps"],"mappings":"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","file":"RSITooltip.js","sourcesContent":["\r\n\r\nimport { format } from \"d3-format\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport displayValuesFor from \"./displayValuesFor\";\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\n\r\nimport { isDefined, functor } from \"../utils\";\r\nimport ToolTipText from \"./ToolTipText\";\r\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\r\n\r\nclass RSITooltip extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { onClick, fontFamily, fontSize, yAccessor, displayFormat, className } = this.props;\r\n\t\tconst { options, labelFill, textFill } = this.props;\r\n\t\tconst { displayValuesFor } = this.props;\r\n\t\tconst { chartConfig: { width, height } } = moreProps;\r\n\r\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\r\n\t\tconst rsi = isDefined(currentItem) && yAccessor(currentItem);\r\n\t\tconst value = (rsi && displayFormat(rsi)) || \"n/a\";\r\n\r\n\t\tconst { origin: originProp } = this.props;\r\n\t\tconst origin = functor(originProp);\r\n\t\tconst [x, y] = origin(width, height);\r\n\r\n\t\tconst tooltipLabel = `RSI (${options.windowSize}): `;\r\n\t\treturn (\r\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\r\n\t\t\t\t<ToolTipText x={0} y={0}\r\n\t\t\t\t\tfontFamily={fontFamily} fontSize={fontSize}>\r\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{tooltipLabel}</ToolTipTSpanLabel>\r\n\t\t\t\t\t<tspan  fill={textFill}>{value}</tspan>\r\n\t\t\t\t</ToolTipText>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tclip={false}\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tdrawOn={[\"mousemove\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nRSITooltip.propTypes = {\r\n\torigin: PropTypes.oneOfType([\r\n\t\tPropTypes.array,\r\n\t\tPropTypes.func\r\n\t]).isRequired,\r\n\toptions: PropTypes.shape({\r\n\t\twindowSize: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\tclassName: PropTypes.string,\r\n\tfontFamily: PropTypes.string,\r\n\tfontSize: PropTypes.number,\r\n\tonClick: PropTypes.func,\r\n\tyAccessor: PropTypes.func.isRequired,\r\n\tdisplayFormat: PropTypes.func.isRequired,\r\n\tdisplayValuesFor: PropTypes.func,\r\n\ttextFill: PropTypes.string,\r\n\tlabelFill: PropTypes.string,\r\n};\r\n\r\nRSITooltip.defaultProps = {\r\n\tdisplayFormat: format(\".2f\"),\r\n\tdisplayValuesFor: displayValuesFor,\r\n\torigin: [0, 0],\r\n\tclassName: \"react-stockcharts-tooltip\",\r\n};\r\n\r\nexport default RSITooltip;"]}