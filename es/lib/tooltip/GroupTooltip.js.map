{"version":3,"sources":["../../../../src/lib/tooltip/GroupTooltip.js"],"names":["React","Component","PropTypes","format","displayValuesFor","GenericChartComponent","ToolTipText","ToolTipTSpanLabel","VALID_LAYOUTS","SingleTooltip","props","handleClick","bind","e","onClick","forChart","options","chartId","origin","yLabel","yValue","labelFill","valueFill","withShape","fontSize","fontFamily","layout","comp","renderValueNextToLabel","renderValueBeneathToLabel","renderInline","propTypes","array","isRequired","string","func","number","bool","oneOfType","object","oneOf","defaultProps","GroupTooltip","renderSVG","moreProps","position","chartConfig","height","width","dx","dy","textAnchor","xyPos","undefined","className","verticalSize","displayFormat","currentItem","getPosition","xPos","yPos","singleTooltip","map","each","idx","yAccessor","yDisplayValue","orig","arrayOf","shape"],"mappings":"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","file":"GroupTooltip.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { format } from \"d3-format\";\r\nimport displayValuesFor from \"./displayValuesFor\";\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport ToolTipText from \"./ToolTipText\";\r\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\r\n\r\nconst VALID_LAYOUTS = [\r\n\t\"horizontal\",\r\n\t\"horizontalRows\",\r\n\t\"horizontalInline\",\r\n\t\"vertical\",\r\n\t\"verticalRows\"\r\n];\r\n\r\nclass SingleTooltip extends Component {\r\n\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\t\tthis.handleClick = this.handleClick.bind( this );\r\n\t}\r\n\r\n\thandleClick( e ) {\r\n\t\tconst { onClick, forChart, options } = this.props;\r\n\t\tonClick( { chartId: forChart, ...options }, e );\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the value next to the label.\r\n\t */\r\n\trenderValueNextToLabel() {\r\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\r\n\t\t\t\t{withShape ? <rect x=\"0\" y=\"-6\" width=\"6\" height=\"6\" fill={valueFill} /> : null}\r\n\t\t\t\t<ToolTipText x={withShape ? 8 : 0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\r\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}: </ToolTipTSpanLabel>\r\n\t\t\t\t\t<tspan fill={valueFill}>{yValue}</tspan>\r\n\t\t\t\t</ToolTipText>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the value beneath the label.\r\n\t */\r\n\trenderValueBeneathToLabel() {\r\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\r\n\t\t\t\t{withShape ? <line x1={0} y1={2} x2={0} y2={28} stroke={valueFill} strokeWidth=\"4px\" /> : null}\r\n\t\t\t\t<ToolTipText x={5} y={11} fontFamily={fontFamily} fontSize={fontSize}>\r\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}</ToolTipTSpanLabel>\r\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={valueFill}>{yValue}</tspan>\r\n\t\t\t\t</ToolTipText>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the value next to the label.\r\n\t * The parent component must have a \"text\"-element.\r\n\t */\r\n\trenderInline() {\r\n\t\tconst { yLabel, yValue, labelFill, valueFill, fontSize, fontFamily } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<tspan onClick={this.handleClick} fontFamily={fontFamily} fontSize={fontSize}>\r\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}:&nbsp;</ToolTipTSpanLabel>\r\n\t\t\t\t<tspan fill={valueFill}>{yValue}&nbsp;&nbsp;</tspan>\r\n\t\t\t</tspan>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { layout } = this.props;\r\n\t\tlet comp = null;\r\n\r\n\t\tswitch ( layout ) {\r\n\t\t\tcase \"horizontal\":\r\n\t\t\t\tcomp = this.renderValueNextToLabel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"horizontalRows\":\r\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"horizontalInline\":\r\n\t\t\t\tcomp = this.renderInline();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vertical\":\r\n\t\t\t\tcomp = this.renderValueNextToLabel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"verticalRows\":\r\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcomp = this.renderValueNextToLabel();\r\n\t\t}\r\n\r\n\t\treturn comp;\r\n\t}\r\n}\r\n\r\nSingleTooltip.propTypes = {\r\n\torigin: PropTypes.array.isRequired,\r\n\tyLabel: PropTypes.string.isRequired,\r\n\tyValue: PropTypes.string.isRequired,\r\n\tonClick: PropTypes.func,\r\n\tfontFamily: PropTypes.string,\r\n\tlabelFill: PropTypes.string.isRequired,\r\n\tvalueFill: PropTypes.string.isRequired,\r\n\tfontSize: PropTypes.number,\r\n\twithShape: PropTypes.bool,\r\n\tforChart: PropTypes.oneOfType( [PropTypes.number, PropTypes.string] ).isRequired,\r\n\toptions: PropTypes.object.isRequired,\r\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\r\n};\r\n\r\nSingleTooltip.defaultProps = {\r\n\tlabelFill: \"#4682B4\",\r\n\tvalueFill: \"#000000\",\r\n\twithShape: false,\r\n};\r\n\r\nclass GroupTooltip extends Component {\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\t\tthis.renderSVG = this.renderSVG.bind( this );\r\n\t}\r\n\r\n\tgetPosition(moreProps) {\r\n\t\tconst { position } = this.props;\r\n\t\tconst { height, width } = moreProps.chartConfig;\r\n\r\n\t\tconst dx = 20;\r\n\t\tconst dy = 40;\r\n\t\tlet textAnchor = null;\r\n\t\tlet xyPos = null;\r\n\r\n\t\tif (position !== undefined) {\r\n\t\t\tswitch ( position ) {\r\n\t\t\t\tcase \"topRight\":\r\n\t\t\t\t\txyPos = [width - dx, null];\r\n\t\t\t\t\ttextAnchor = \"end\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bottomLeft\":\r\n\t\t\t\t\txyPos = [null, height - dy];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bottomRight\":\r\n\t\t\t\t\txyPos = [width - dx, height - dy];\r\n\t\t\t\t\ttextAnchor = \"end\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\txyPos = [null, null];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\txyPos = [null, null];\r\n\t\t}\r\n\r\n\t\treturn { xyPos, textAnchor };\r\n\t}\r\n\r\n\r\n\trenderSVG( moreProps ) {\r\n\r\n\t\tconst { displayValuesFor } = this.props;\r\n\t\tconst { chartId } = moreProps;\r\n\r\n\t\tconst { className, onClick, width, verticalSize, fontFamily, fontSize, layout } = this.props;\r\n\t\tconst { origin, displayFormat, options } = this.props;\r\n\t\tconst currentItem = displayValuesFor( this.props, moreProps );\r\n\t\tconst { xyPos, textAnchor } = this.getPosition(moreProps);\r\n\r\n\t\tconst xPos = xyPos != null && xyPos[0] != null ? xyPos[0] : origin[0];\r\n\t\tconst yPos = xyPos != null && xyPos[1] != null ? xyPos[1] : origin[1];\r\n\r\n\t\tconst singleTooltip = options.map( ( each, idx ) => {\r\n\r\n\t\t\tconst yValue = currentItem && each.yAccessor( currentItem );\r\n\t\t\tconst yDisplayValue = yValue ? displayFormat( yValue ) : \"n/a\";\r\n\r\n\t\t\tconst orig = () => {\r\n\t\t\t\tif ( layout === \"horizontal\" || layout === \"horizontalRows\" ) {\r\n\t\t\t\t\treturn [width * idx, 0];\r\n\t\t\t\t}\r\n\t\t\t\tif ( layout === \"vertical\" ) {\r\n\t\t\t\t\treturn [0, verticalSize * idx];\r\n\t\t\t\t}\r\n\t\t\t\tif ( layout === \"verticalRows\" ) {\r\n\t\t\t\t\treturn [0, verticalSize * 2.3 * idx];\r\n\t\t\t\t}\r\n\t\t\t\treturn [0, 0];\r\n\t\t\t};\r\n\r\n\t\t\treturn <SingleTooltip\r\n\t\t\t\tkey={idx}\r\n\t\t\t\tlayout={layout}\r\n\t\t\t\torigin={orig()}\r\n\t\t\t\tyLabel={each.yLabel}\r\n\t\t\t\tyValue={yDisplayValue}\r\n\t\t\t\toptions={each}\r\n\t\t\t\tforChart={chartId}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tfontFamily={fontFamily}\r\n\t\t\t\tfontSize={fontSize}\r\n\t\t\t\tlabelFill={each.labelFill}\r\n\t\t\t\tvalueFill={each.valueFill}\r\n\t\t\t\twithShape={each.withShape}\r\n\t\t\t/>;\r\n\t\t} );\r\n\r\n\t\treturn (\r\n\t\t\t<g transform={`translate(${xPos}, ${yPos})`} className={className} textAnchor={textAnchor}>\r\n\t\t\t\t{layout === \"horizontalInline\"\r\n\t\t\t\t\t? <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>{singleTooltip}</ToolTipText>\r\n\t\t\t\t\t: singleTooltip\r\n\t\t\t\t}\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tclip={false}\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tdrawOn={[\"mousemove\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\n\r\nGroupTooltip.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\r\n\tposition: PropTypes.oneOf( [\r\n\t\t\"topRight\",\r\n\t\t\"bottomLeft\",\r\n\t\t\"bottomRight\"] ),\r\n\tdisplayFormat: PropTypes.func.isRequired,\r\n\torigin: PropTypes.array.isRequired,\r\n\tdisplayValuesFor: PropTypes.func,\r\n\tonClick: PropTypes.func,\r\n\tfontFamily: PropTypes.string,\r\n\tfontSize: PropTypes.number,\r\n\twidth: PropTypes.number, // \"width\" only be used, if layout is \"horizontal\" or \"horizontalRows\".\r\n\tverticalSize: PropTypes.number,  // \"verticalSize\" only be used, if layout is \"vertical\", \"verticalRows\".\r\n\toptions: PropTypes.arrayOf( PropTypes.shape( {\r\n\t\tyLabel: PropTypes.oneOfType( [\r\n\t\t\tPropTypes.string,\r\n\t\t\tPropTypes.func] ).isRequired,\r\n\t\tyAccessor: PropTypes.func.isRequired,\r\n\t\tlabelFill: PropTypes.string,\r\n\t\tvalueFill: PropTypes.string,\r\n\t\twithShape: PropTypes.bool, // \"withShape\" is ignored, if layout is \"horizontalInline\" or \"vertical\".\r\n\t} ) ),\r\n};\r\n\r\nGroupTooltip.defaultProps = {\r\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-group-tooltip\",\r\n\tlayout: \"horizontal\",\r\n\tdisplayFormat: format( \".2f\" ),\r\n\tdisplayValuesFor: displayValuesFor,\r\n\torigin: [0, 0],\r\n\twidth: 60,\r\n\tverticalSize: 13,\r\n};\r\n\r\nexport default GroupTooltip;\r\n"]}