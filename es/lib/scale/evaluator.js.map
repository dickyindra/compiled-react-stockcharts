{"version":3,"sources":["../../../../src/lib/scale/evaluator.js"],"names":["head","last","getClosestItemIndexes","isDefined","isNotDefined","getLogger","log","getNewEnd","fallbackEnd","xAccessor","initialXScale","start","lastItem","lastItemX","lastItemXValue","range","rangeStart","rangeEnd","newEnd","extentsWrapper","useWholeData","clamp","pointsPerPxThreshold","minPointsPerPxThreshold","flipXScale","filterData","data","inputDomain","currentPlotData","currentDomain","fallbackStart","plotData","domain","left","right","clampedDomain","filteredData","getFilteredResponse","length","Math","max","min","realInputDomain","xScale","copy","width","floor","chartWidth","showMaxThreshold","canShowTheseManyPeriods","newXScale","newWidth","slice","showMax","arrayLength","maxThreshold","minThreshold","showMinThreshold","threshold","ceil","newLeftIndex","newRightIndex","invert"],"mappings":"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","file":"evaluator.js","sourcesContent":["\r\n\r\nimport {\r\n\thead,\r\n\tlast,\r\n\tgetClosestItemIndexes,\r\n\tisDefined,\r\n\tisNotDefined,\r\n\tgetLogger,\r\n} from \"../utils\";\r\n\r\nconst log = getLogger(\"evaluator\");\r\n\r\nfunction getNewEnd(fallbackEnd, xAccessor, initialXScale, start) {\r\n\tconst {\r\n\t\tlastItem, lastItemX\r\n\t} = fallbackEnd;\r\n\tconst lastItemXValue = xAccessor(lastItem);\r\n\tconst [rangeStart, rangeEnd] = initialXScale.range();\r\n\r\n\tconst newEnd = (rangeEnd - rangeStart) / (lastItemX - rangeStart) * (lastItemXValue - start) + start;\r\n\treturn newEnd;\r\n}\r\n\r\nfunction extentsWrapper(useWholeData, clamp, pointsPerPxThreshold, minPointsPerPxThreshold, flipXScale) {\r\n\tfunction filterData(\r\n\t\tdata, inputDomain, xAccessor, initialXScale,\r\n\t\t{ currentPlotData, currentDomain, fallbackStart, fallbackEnd } = {}\r\n\t) {\r\n\t\tif (useWholeData) {\r\n\t\t\treturn { plotData: data, domain: inputDomain };\r\n\t\t}\r\n\r\n\t\tlet left = head(inputDomain);\r\n\t\tlet right = last(inputDomain);\r\n\t\tlet clampedDomain = inputDomain;\r\n\r\n\t\tlet filteredData = getFilteredResponse(data, left, right, xAccessor);\r\n\r\n\t\tif (filteredData.length === 1 && isDefined(fallbackStart)) {\r\n\t\t\tleft = fallbackStart;\r\n\t\t\tright = getNewEnd(fallbackEnd, xAccessor, initialXScale, left);\r\n\r\n\t\t\tclampedDomain = [\r\n\t\t\t\tleft,\r\n\t\t\t\tright,\r\n\t\t\t];\r\n\t\t\tfilteredData = getFilteredResponse(data, left, right, xAccessor);\r\n\t\t}\r\n\r\n\t\tif (typeof clamp === \"function\") {\r\n\t\t\tclampedDomain = clamp(clampedDomain, [xAccessor(head(data)), xAccessor(last(data))]);\r\n\t\t} else {\r\n\t\t\tif (clamp === \"left\" || clamp === \"both\" || clamp === true) {\r\n\t\t\t\tclampedDomain = [\r\n\t\t\t\t\tMath.max(left, xAccessor(head(data))),\r\n\t\t\t\t\tclampedDomain[1]\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\tif (clamp === \"right\" || clamp === \"both\" || clamp === true) {\r\n\t\t\t\tclampedDomain = [\r\n\t\t\t\t\tclampedDomain[0],\r\n\t\t\t\t\tMath.min(right, xAccessor(last(data)))\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (clampedDomain !== inputDomain) {\r\n\t\t\tfilteredData = getFilteredResponse(data, clampedDomain[0], clampedDomain[1], xAccessor);\r\n\t\t}\r\n\r\n\t\tconst realInputDomain = clampedDomain;\r\n\t\t// [xAccessor(head(filteredData)), xAccessor(last(filteredData))];\r\n\r\n\t\tconst xScale = initialXScale.copy().domain(realInputDomain);\r\n\r\n\t\tlet width = Math.floor(xScale(xAccessor(last(filteredData)))\r\n\t\t\t- xScale(xAccessor(head(filteredData))));\r\n\r\n\t\t// prevent negative width when flipXScale\r\n\t\tif (flipXScale && width < 0) {\r\n\t\t\twidth = width * -1;\r\n\t\t}\r\n\r\n\t\tlet plotData, domain;\r\n\r\n\t\tconst chartWidth = last(xScale.range()) - head(xScale.range());\r\n\r\n\t\tlog(`Trying to show ${filteredData.length} points in ${width}px,`\r\n\t\t\t+ ` I can show up to ${showMaxThreshold(width, pointsPerPxThreshold) - 1} points in that width. `\r\n\t\t\t+ `Also FYI the entire chart width is ${chartWidth}px and pointsPerPxThreshold is ${pointsPerPxThreshold}`);\r\n\r\n\t\tif (canShowTheseManyPeriods(width, filteredData.length, pointsPerPxThreshold, minPointsPerPxThreshold)) {\r\n\t\t\tplotData = filteredData;\r\n\t\t\tdomain = realInputDomain;\r\n\t\t\tlog(\"AND IT WORKED\");\r\n\t\t} else {\r\n\t\t\tif (chartWidth > showMaxThreshold(width, pointsPerPxThreshold) && isDefined(fallbackEnd)) {\r\n\t\t\t\tplotData = filteredData;\r\n\t\t\t\tconst newEnd = getNewEnd(fallbackEnd, xAccessor, initialXScale, head(realInputDomain));\r\n\t\t\t\tdomain = [\r\n\t\t\t\t\thead(realInputDomain),\r\n\t\t\t\t\tnewEnd\r\n\t\t\t\t];\r\n\t\t\t\t// plotData = currentPlotData || filteredData.slice(filteredData.length - showMax(width, pointsPerPxThreshold));\r\n\t\t\t\t// domain = currentDomain || [xAccessor(head(plotData)), xAccessor(last(plotData))];\r\n\r\n\t\t\t\tconst newXScale = xScale.copy().domain(domain);\r\n\t\t\t\tconst newWidth = Math.floor(newXScale(xAccessor(last(plotData)))\r\n\t\t\t\t\t- newXScale(xAccessor(head(plotData))));\r\n\r\n\t\t\t\tlog(`and ouch, that is too much, so instead showing ${plotData.length} in ${newWidth}px`);\r\n\t\t\t} else {\r\n\t\t\t\tplotData = currentPlotData || filteredData.slice(filteredData.length - showMax(width, pointsPerPxThreshold));\r\n\t\t\t\tdomain = currentDomain || [xAccessor(head(plotData)), xAccessor(last(plotData))];\r\n\r\n\t\t\t\tconst newXScale = xScale.copy().domain(domain);\r\n\t\t\t\tconst newWidth = Math.floor(newXScale(xAccessor(last(plotData)))\r\n\t\t\t\t\t- newXScale(xAccessor(head(plotData))));\r\n\r\n\t\t\t\tlog(`and ouch, that is too much, so instead showing ${plotData.length} in ${newWidth}px`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { plotData, domain };\r\n\t}\r\n\treturn { filterData };\r\n}\r\n\r\nfunction canShowTheseManyPeriods(width, arrayLength, maxThreshold, minThreshold) {\r\n\treturn arrayLength > showMinThreshold(width, minThreshold) && arrayLength < showMaxThreshold(width, maxThreshold);\r\n}\r\n\r\nfunction showMinThreshold(width, threshold) {\r\n\treturn Math.max(1, Math.ceil(width * threshold));\r\n}\r\n\r\nfunction showMaxThreshold(width, threshold) {\r\n\treturn Math.floor(width * threshold);\r\n}\r\n\r\nfunction showMax(width, threshold) {\r\n\treturn Math.floor(showMaxThreshold(width, threshold) * 0.97);\r\n}\r\n\r\nfunction getFilteredResponse(data, left, right, xAccessor) {\r\n\tconst newLeftIndex = getClosestItemIndexes(data, left, xAccessor).right;\r\n\tconst newRightIndex = getClosestItemIndexes(data, right, xAccessor).left;\r\n\r\n\tconst filteredData = data.slice(newLeftIndex, newRightIndex + 1);\r\n\t// console.log(right, newRightIndex, dataForInterval.length);\r\n\r\n\treturn filteredData;\r\n}\r\n\r\nexport default function({\r\n\txScale, useWholeData, clamp,\r\n\tpointsPerPxThreshold, minPointsPerPxThreshold,\r\n\tflipXScale\r\n}) {\r\n\treturn extentsWrapper(\r\n\t\tuseWholeData || isNotDefined(xScale.invert),\r\n\t\tclamp,\r\n\t\tpointsPerPxThreshold,\r\n\t\tminPointsPerPxThreshold,\r\n\t\tflipXScale\r\n\t);\r\n}\r\n"]}