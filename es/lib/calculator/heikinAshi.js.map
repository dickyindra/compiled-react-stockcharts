{"version":3,"sources":["../../../../src/lib/calculator/heikinAshi.js"],"names":["mappedSlidingWindow","identity","source","calculator","data","algorithm","windowSize","undefinedValue","open","high","low","close","accumulator","prev","now","date","volume","Math","max","min","x","arguments","length"],"mappings":";;AAEA,SAASA,mBAAT,EAA8BC,QAA9B,QAA8C,UAA9C;;AAEA,eAAe,YAAW;;AAEzB,KAAIC,SAASD,QAAb;;AAEA,UAASE,UAAT,CAAoBC,IAApB,EAA0B;AACzB,MAAMC,YAAYL,sBAChBM,UADgB,CACL,CADK,EAEhBC,cAFgB,CAED,gBAAgC;AAAA,OAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,OAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,OAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,OAAZC,KAAY,QAAZA,KAAY;;AAC/CA,WAAQ,CAACH,OAAOC,IAAP,GAAcC,GAAd,GAAoBC,KAArB,IAA8B,CAAtC;AACA,UAAO,EAAEH,UAAF,EAAQC,UAAR,EAAcC,QAAd,EAAmBC,YAAnB,EAAP;AACA,GALgB,EAMhBC,WANgB,CAMJ,iBAAiB;AAAA;AAAA,OAAfC,IAAe;AAAA,OAATC,GAAS;;AAC7B;AAD6B,OAErBC,IAFqB,GAEJD,GAFI,CAErBC,IAFqB;AAAA,OAEfC,MAFe,GAEJF,GAFI,CAEfE,MAFe;;AAG7B,OAAML,QAAQ,CAACG,IAAIN,IAAJ,GAAWM,IAAIL,IAAf,GAAsBK,IAAIJ,GAA1B,GAAgCI,IAAIH,KAArC,IAA8C,CAA5D;AACA,OAAMH,OAAO,CAACK,KAAKL,IAAL,GAAYK,KAAKF,KAAlB,IAA2B,CAAxC;AACA,OAAMF,OAAOQ,KAAKC,GAAL,CAASV,IAAT,EAAeM,IAAIL,IAAnB,EAAyBE,KAAzB,CAAb;AACA,OAAMD,MAAMO,KAAKE,GAAL,CAASX,IAAT,EAAeM,IAAIJ,GAAnB,EAAwBC,KAAxB,CAAZ;AACA,UAAO,EAAEI,UAAF,EAAQP,UAAR,EAAcC,UAAd,EAAoBC,QAApB,EAAyBC,YAAzB,EAAgCK,cAAhC,EAAP;AACA,GAdgB,CAAlB;;AAgBA,SAAOX,UAAUD,IAAV,CAAP;AACA;AACDD,YAAWD,MAAX,GAAoB,UAASkB,CAAT,EAAY;AAC/B,MAAI,CAACC,UAAUC,MAAf,EAAuB;AACtB,UAAOpB,MAAP;AACA;AACDA,WAASkB,CAAT;AACA,SAAOjB,UAAP;AACA,EAND;;AAQA,QAAOA,UAAP;AACA","file":"heikinAshi.js","sourcesContent":["\r\n\r\nimport { mappedSlidingWindow, identity } from \"../utils\";\r\n\r\nexport default function() {\r\n\r\n\tlet source = identity;\r\n\r\n\tfunction calculator(data) {\r\n\t\tconst algorithm = mappedSlidingWindow()\r\n\t\t\t.windowSize(2)\r\n\t\t\t.undefinedValue(({ open, high, low, close }) => {\r\n\t\t\t\tclose = (open + high + low + close) / 4;\r\n\t\t\t\treturn { open, high, low, close };\r\n\t\t\t})\r\n\t\t\t.accumulator(([prev, now]) => {\r\n\t\t\t\t// console.log(prev, now);\r\n\t\t\t\tconst { date, volume } = now;\r\n\t\t\t\tconst close = (now.open + now.high + now.low + now.close) / 4;\r\n\t\t\t\tconst open = (prev.open + prev.close) / 2;\r\n\t\t\t\tconst high = Math.max(open, now.high, close);\r\n\t\t\t\tconst low = Math.min(open, now.low, close);\r\n\t\t\t\treturn { date, open, high, low, close, volume };\r\n\t\t\t});\r\n\r\n\t\treturn algorithm(data);\r\n\t}\r\n\tcalculator.source = function(x) {\r\n\t\tif (!arguments.length) {\r\n\t\t\treturn source;\r\n\t\t}\r\n\t\tsource = x;\r\n\t\treturn calculator;\r\n\t};\r\n\r\n\treturn calculator;\r\n}"]}