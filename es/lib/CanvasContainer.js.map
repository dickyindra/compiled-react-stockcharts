{"version":3,"sources":["../../../src/lib/CanvasContainer.js"],"names":["React","Component","PropTypes","isDefined","getLogger","log","CanvasContainer","props","setDrawCanvas","bind","drawCanvas","node","id","getContext","axes","height","width","type","zIndex","ratio","position","propTypes","number","isRequired","string"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,SAArC;;AAEA,IAAMC,MAAMD,UAAU,iBAAV,CAAZ;;IAEME,e;;;AACL,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACZA,KADY;;AAElB,QAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AACA,QAAKC,UAAL,GAAkB,EAAlB;AAHkB;AAIlB;;;;gCACaC,I,EAAM;AACnB,OAAIR,UAAUQ,IAAV,CAAJ,EACC,KAAKD,UAAL,CAAgBC,KAAKC,EAArB,IAA2BD,KAAKE,UAAL,CAAgB,IAAhB,CAA3B,CADD,KAGC,KAAKH,UAAL,GAAkB,EAAlB;AACD;;;sCACmB;AACnB,OAAIP,UAAU,KAAKO,UAAL,CAAgBI,IAA1B,CAAJ,EAAqC;AACpC,WAAO,KAAKJ,UAAZ;AACA;AACD;;;2BACQ;AAAA,gBACuC,KAAKH,KAD5C;AAAA,OACAQ,MADA,UACAA,MADA;AAAA,OACQC,KADR,UACQA,KADR;AAAA,OACeC,IADf,UACeA,IADf;AAAA,OACqBC,MADrB,UACqBA,MADrB;AAAA,OAC6BC,KAD7B,UAC6BA,KAD7B;;AAER,OAAIF,SAAS,KAAb,EAAoB,OAAO,IAAP;;AAEpBZ,OAAI,cAAJ,EAAoBc,KAApB;;AAEA,UACC;AAAA;AAAA,MAAK,OAAO,EAAEC,UAAU,UAAZ,EAAwBF,QAAQA,MAAhC,EAAZ;AACC,oCAAQ,IAAG,IAAX,EAAgB,KAAK,KAAKV,aAA1B,EAAyC,OAAOQ,QAAQG,KAAxD,EAA+D,QAAQJ,SAASI,KAAhF;AACC,YAAO,EAAEC,UAAU,UAAZ,EAAwBJ,OAAOA,KAA/B,EAAsCD,QAAQA,MAA9C,EADR,GADD;AAGC,oCAAQ,IAAG,MAAX,EAAkB,KAAK,KAAKP,aAA5B,EAA2C,OAAOQ,QAAQG,KAA1D,EAAiE,QAAQJ,SAASI,KAAlF;AACC,YAAO,EAAEC,UAAU,UAAZ,EAAwBJ,OAAOA,KAA/B,EAAsCD,QAAQA,MAA9C,EADR,GAHD;AAKC,oCAAQ,IAAG,YAAX,EAAwB,KAAK,KAAKP,aAAlC,EAAiD,OAAOQ,QAAQG,KAAhE,EAAuE,QAAQJ,SAASI,KAAxF;AACC,YAAO,EAAEC,UAAU,UAAZ,EAAwBJ,OAAOA,KAA/B,EAAsCD,QAAQA,MAA9C,EADR;AALD,IADD;AAUA;;;;EAjC4Bd,S;AAmC9B;;;;;;AAIAK,gBAAgBe,SAAhB,GAA4B;AAC3BL,QAAOd,UAAUoB,MAAV,CAAiBC,UADG;AAE3BR,SAAQb,UAAUoB,MAAV,CAAiBC,UAFE;AAG3BN,OAAMf,UAAUsB,MAAV,CAAiBD,UAHI;AAI3BL,SAAQhB,UAAUoB,MAJS;AAK3BH,QAAOjB,UAAUoB,MAAV,CAAiBC;AALG,CAA5B;;AAQA,eAAejB,eAAf","file":"CanvasContainer.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isDefined, getLogger } from \"./utils\";\r\n\r\nconst log = getLogger(\"CanvasContainer\");\r\n\r\nclass CanvasContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.setDrawCanvas = this.setDrawCanvas.bind(this);\r\n\t\tthis.drawCanvas = {};\r\n\t}\r\n\tsetDrawCanvas(node) {\r\n\t\tif (isDefined(node))\r\n\t\t\tthis.drawCanvas[node.id] = node.getContext(\"2d\");\r\n\t\telse\r\n\t\t\tthis.drawCanvas = {};\r\n\t}\r\n\tgetCanvasContexts() {\r\n\t\tif (isDefined(this.drawCanvas.axes)) {\r\n\t\t\treturn this.drawCanvas;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { height, width, type, zIndex, ratio } = this.props;\r\n\t\tif (type === \"svg\") return null;\r\n\r\n\t\tlog(\"using ratio \", ratio);\r\n\r\n\t\treturn (\r\n\t\t\t<div style={{ position: \"absolute\", zIndex: zIndex }}>\r\n\t\t\t\t<canvas id=\"bg\" ref={this.setDrawCanvas} width={width * ratio} height={height * ratio}\r\n\t\t\t\t\tstyle={{ position: \"absolute\", width: width, height: height }} />\r\n\t\t\t\t<canvas id=\"axes\" ref={this.setDrawCanvas} width={width * ratio} height={height * ratio}\r\n\t\t\t\t\tstyle={{ position: \"absolute\", width: width, height: height }} />\r\n\t\t\t\t<canvas id=\"mouseCoord\" ref={this.setDrawCanvas} width={width * ratio} height={height * ratio}\r\n\t\t\t\t\tstyle={{ position: \"absolute\", width: width, height: height }} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n/*\r\n\t\t\t\t<canvas id=\"hover\" ref={this.setDrawCanvas} width={width * ratio} height={height * ratio}\r\n\t\t\t\t\tstyle={{ position: \"absolute\", width: width, height: height }} />\r\n*/\r\nCanvasContainer.propTypes = {\r\n\twidth: PropTypes.number.isRequired,\r\n\theight: PropTypes.number.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tzIndex: PropTypes.number,\r\n\tratio: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CanvasContainer;\r\n"]}